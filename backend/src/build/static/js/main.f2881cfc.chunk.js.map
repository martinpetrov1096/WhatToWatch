{"version":3,"sources":["styles/global.ts","styles/components/lobby/genres.ts","components/lobby/genres.tsx","styles/components/lobby/min-rating.ts","components/lobby/min-rating.tsx","styles/components/lobby/id.ts","components/lobby/id.tsx","styles/components/lobby/type.ts","components/lobby/type.tsx","styles/routes/lobby.ts","routes/lobby.tsx","styles/components/game/navbar.ts","components/game/navbar.tsx","styles/components/game/card.ts","styles/components/game/loading.ts","components/loading.tsx","components/game/card.tsx","styles/routes/game/vote.ts","routes/game/vote.tsx","styles/routes/game/overview.ts","routes/game/overview.tsx","styles/components/game/extra-details.ts","components/game/extra-details.tsx","styles/routes/game/details.ts","routes/game/details.tsx","styles/routes/invalid.ts","routes/game/game.tsx","routes/invalid.tsx","styles/routes/home.ts","routes/home.tsx","routes/router.tsx","app.tsx","index.tsx"],"names":["color","transition","Button","styled","button","ButtonSecondary","PurpleBG","div","Wrapper","Header","h3","ItemWrapper","Checkbox","input","Global","Label","label","LobbyGenres","props","genres","genre","type","map","name","value","id","checked","curGenres","includes","onChange","delGenre","addGenre","htmlFor","SelectionWrapper","Input","LobbyMinRating","handleChange","useCallback","event","changeMinRating","parseInt","target","onClick","curMinRating","min","max","Element","h2","LobbyID","lobbyId","Category","TypeSwitchParams","checkedIcon","uncheckedIcon","offColor","onColor","offHandleColor","onHandleColor","height","handleDiameter","LobbyType","setType","socket","BG","Title","h1","LobbyRoute","useParams","history","useHistory","useState","playing","numPlayers","minRating","lobby","setLobby","useEffect","io","config","server","url","query","on","console","log","oldLobby","JSON","parse","stringify","err","disconnect","axios","get","params","then","res","data","Status","push","catch","startGame","emit","newType","genreId","MinRating","nav","onVoteView","GameNavbar","a","location","useLocation","pathname","setOnVoteView","navigateTo","loc","Main","posterUrl","svg","css","keyframes","Circle","circle","Loading","viewBox","cx","cy","r","fill","stroke-width","stroke-miterlimit","GameCard","gameId","goToDetails","card","undefined","movieDb","poster_path","toString","CardWrapper","vote","VoteWrapper","NoButton","YesButton","GameVote","curView","setCurView","curVote","setCurVote","v","curSwipe","setTimeout","swipeIdx","StatusWrapper","ProgressBar","CircularProgressbar","PlayerVote","GameOverview","swipes","sort","b","numLikes","numDislikes","swipe","text","strokeWidth","styles","buildStyles","strokeLinecap","pathColor","trailColor","CastWrapper","Cast","ReviewsWrapper","Review","GameExtraDetails","details","setDetails","cardId","status","cast","useMemo","credits","slice","reviews","results","c","src","profileUrl","profile_path","alt","character","cite","content","author","bgUrl","ContentWrapper","BackButton","Card","PosterImage","InfoWrapper","GenresWrapper","GenreItem","h4","DescriptionVoteWrapper","Description","p","VoteProgressBar","CardDetails","curCard","cards","find","original_title","original_name","setGenres","genre_ids","g","backdrop_path","goBack","title","vote_average","overview","GoHomeButton","span","Apology","Solution","InvalidGame","goHome","apology","GameRoute","setNumPlayers","setSwipes","curSwipeIdx","setCurSwipeIdx","oldSwipes","concat","oldIdx","game","length","swipeId","idx","findIndex","newSwipes","voteFunc","nextSwipe","exact","path","filter","x","h6","GameSection","JoinSection","JoinButton","disabled","NewButton","OrHeader","HomeRoute","joinCode","_setJoinCode","validCode","setValidCode","setJoinCode","code","newGame","post","fields","inputMode","to","Router","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2881cfc.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const color = {\n   primary: '#3B406B',\n   primaryDark: '#2B2F54',\n   secondary: '#FF616F'\n}\n\nexport const transition = 'all .15s ease-in-out';\n\nexport const Button = styled.button`\n   transition: ${transition};\n   padding: 10px;\n   background: transparent;\n   box-shadow: none;\n   outline: none;\n   border: 1px solid white;\n   border-radius: 10px;\n   color: white;\n   font-size: 22px;\n   margin: 15px;\n   &:hover {\n      color: ${color.secondary} !important;\n      border-color: ${color.secondary} !important;\n   }\n`;\n\nexport const ButtonSecondary = styled(Button)`\n   pointer-events: none !important;\n   border: none !important;\n   background-color: ${color.secondary}};\n`;\n\nexport const PurpleBG = styled.div`\n   margin: 0;\n   padding: 10px;\n`;","import styled from 'styled-components';\nimport * as Global from '../../global';\n\nexport const Wrapper = styled.div`\n   margin-bottom: 30px;\n\n   max-width: 500px;\n   height: 100%;\n   display: flex;\n   flex-flow: row wrap;\n   justify-content: center;\n   align-content: space-around;\n`;\n\nexport const Header = styled.h3`\n   width: 100%;\n   text-align: center;\n   font-size: 30px;\n`;\n\nexport const ItemWrapper = styled.div`\n   margin-top: 30px;\n\n   flex-basis: 80px;\n   flex-grow: 1;\n   white-space: nowrap;\n`;\n\nexport const Checkbox = styled.input`\n   visibility: hidden;\n   :checked + label {\n      background-color: ${Global.color.primaryDark};\n      box-shadow: inset 2px 2px 2px #191B30;\n   }\n`;\n\nexport const Label = styled.label`\n   padding: 10px;\n   border-radius: 5px;\n\n   font-size: 14px;\n   transition: ${Global.transition};\n\n   :hover {\n      background-color: ${Global.color.primaryDark};\n   }\n`;","import genre from '../../config/genres.json';\nimport * as Genres from '../../styles/components/lobby/genres';\n\ninterface IGenreSelectorParamTypes {\n   type: 'movie' | 'tv';\n   addGenre: (genreId: number) => void;\n   delGenre: (genreId: number) => void;\n   curGenres: Array<number>;\n}\n\nexport const LobbyGenres = (props: IGenreSelectorParamTypes) => {\n\n   const genres = genre[props.type].map((genre) => {\n      return (\n         <Genres.ItemWrapper key={genre.id} >\n            <Genres.Checkbox type=\"checkbox\" \n               name={genre.name}\n               value={genre.id}\n               id={genre.name}\n               checked={props.curGenres.includes(genre.id)}\n               onChange={()=>props.curGenres.includes(genre.id) ? props.delGenre(genre.id) : props.addGenre(genre.id)}/>\n            <Genres.Label htmlFor={genre.name}>{genre.name}</Genres.Label>\n         </Genres.ItemWrapper>\n      );\n   });\n   return (\n      <Genres.Wrapper>\n         <Genres.Header>Genres</Genres.Header>\n         {genres}\n      </Genres.Wrapper>\n   );\n}","import styled from 'styled-components';\nimport * as Global from '../../global';\n\nexport const Wrapper = styled.div`\n   margin-bottom: 30px;\n   display: flex;\n   flex-flow: column nowrap;\n   align-items: center;\n`;\n\nexport const Header = styled.h3`\n   font-size: 30px;\n`;\n\nexport const SelectionWrapper = styled.div`\n   display: flex;\n   flex-flow: row nowrap;\n   align-items: center;\n`;\n\nexport const Button = styled(Global.Button)`\n   width: 40px;\n   height: 40px;\n   padding: 0;\n   text-align: center;\n`;\n\nexport const Input = styled.input`\n   border: none;\n   border-radius: 8px;\n   box-shadow: inset 2px 2px 2px #191B30;\n   outline: none;\n   width: 40px;\n   height: 40px;\n   background-color: ${Global.color.primaryDark};\n   text-align: center;\n   color: white;\n   font-family: 'Varela', sans-serif;\n   \n   ::-webkit-outer-spin-button,\n   ::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n   }\n   -moz-appearance: textfield // Firefox\n`;","import { useCallback } from \"react\";\nimport * as MinRating from '../../styles/components/lobby/min-rating';\n\ninterface IMinRatingParamTypes {\n   curMinRating: number;\n   changeMinRating: (minRating: number) => void;\n}\n\nexport const LobbyMinRating = (props: IMinRatingParamTypes) => {\n\n   const handleChange = useCallback((event: any) => {\n      props.changeMinRating(parseInt(event.target.value));\n   }, [props]);\n\n   return (\n      <MinRating.Wrapper>\n         <MinRating.Header>Minimum Rating</MinRating.Header>\n         <MinRating.SelectionWrapper>\n            <MinRating.Button onClick={() => props.changeMinRating(props.curMinRating-1)}>-</MinRating.Button>\n            <MinRating.Input type=\"number\" value={props.curMinRating} onChange={handleChange} min=\"0\" max=\"9\"/>\n            <MinRating.Button onClick={() => props.changeMinRating(props.curMinRating+1)}>+</MinRating.Button>\n         </MinRating.SelectionWrapper>\n      </MinRating.Wrapper>\n   );\n}","import styled from 'styled-components';\nimport * as Global from '../../global';\n\nexport const Wrapper = styled.div`\n   margin-bottom: 30px;\n   display: flex;\n   flex-flow: row nowrap;\n`;\n\nexport const Element = styled.h2`\n   margin: 20px min(10px, 1vw);\n   border-radius: 8px;\n   padding: 20px;\n   background-color: ${Global.color.primaryDark};\n   box-shadow: inset 2px 2px 2px #191B30;\n`;\n\nexport const ShareButton = styled(Global.ButtonSecondary)`\n   align-self: center;\n`;","import * as ID from '../../styles/components/lobby/id';\n\ninterface IIDProps {\n   lobbyId: string;\n}\n\nexport const LobbyID = (props: IIDProps) => {\n\n   return (\n      <ID.Wrapper>\n         <ID.Element>{props.lobbyId[0]}</ID.Element>\n         <ID.Element>{props.lobbyId[1]}</ID.Element>\n         <ID.Element>{props.lobbyId[2]}</ID.Element>\n         <ID.Element>{props.lobbyId[3]}</ID.Element>\n         <ID.Element>{props.lobbyId[4]}</ID.Element>\n      </ID.Wrapper>\n   );\n}","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n   margin-bottom: 30px;\n   display: flex;\n   flex-flow: row nowrap;\n   align-items: center;\n`;\n\nexport const Category = styled.h3`\n   margin: 0 10px;\n   font-size: 18px;\n   text-align: center;\n`;\n\n","import { color } from '../../styles/global';\nimport * as Type from '../../styles/components/lobby/type';\nimport Switch from 'react-switch';\n\nconst TypeSwitchParams = {\n      checkedIcon: false,\n      uncheckedIcon: false,\n      offColor: color.primaryDark,\n      onColor: color.primaryDark,\n      offHandleColor: color.secondary,\n      onHandleColor: color.secondary,\n      height: 22,\n      handleDiameter: 26\n}\n\ninterface LobbyTypeProps {\n   type: 'tv' | 'movie';\n   setType: (t: 'tv' | 'movie') => void;\n}\n\nexport const LobbyType = (props: LobbyTypeProps) => {\n\n   return (\n      <Type.Wrapper>\n         <Type.Category>MOVIE</Type.Category>\n         <Switch checked={props.type==='tv'} onChange={(checked) => checked ? props.setType('tv') : props.setType('movie')} {...TypeSwitchParams}/>\n         <Type.Category>TV SHOW</Type.Category>\n      </Type.Wrapper>\n   );\n}","import styled from 'styled-components';\nimport * as Global from '../global';\n\n/**\n * Make the BG height auto, and not 100%\n * since later on when we keep adding \n * options, things might get cluttered\n */\nexport const BG = styled(Global.PurpleBG)`\n   display: flex;\n   flex-flow: column nowrap;\n   justify-content: flex-start;\n   align-items: center;\n   height: auto;\n`;\n\nexport const Title = styled.h1`\n   margin: 20px 0;\n   font-size: max(5vw, 30px);\n`;\n\n\n\n","import { useParams, useHistory } from 'react-router-dom';\nimport { useCallback, useEffect, useState } from 'react';\nimport { io, Socket } from \"socket.io-client\";\nimport axios from 'axios';\nimport config from '../config/config.json';\nimport { ILobby } from '../types/lobby';\nimport { LobbyGenres } from '../components/lobby/genres'\nimport { LobbyMinRating } from '../components/lobby/min-rating';\nimport { LobbyID } from '../components/lobby/id';\nimport { LobbyType } from '../components/lobby/type';\nimport * as Lobby from '../styles/routes/lobby';\nimport { Button } from '../styles/global';\n\ninterface ILobbyParamTypes {\n   lobbyId: string;\n}\n\nlet socket: Socket;\nexport const LobbyRoute = function() {\n   \n   const { lobbyId } = useParams<ILobbyParamTypes>();\n   const history = useHistory();\n   const [lobby, setLobby] = useState<ILobby>({\n      id: lobbyId,\n      playing: false,\n      numPlayers: 1,\n      type: 'movie',\n      genres: [],\n      minRating: 1\n   });\n\n   ///////////////////////////////////////////////////////////////////////////\n   /////////////////////////// USE EFFECT FUNCTIONS //////////////////////////\n   ///////////////////////////////////////////////////////////////////////////\n\n   /**\n    * When the component gets mounted, \n    * initiate the socketio client and \n    * define all of the socket.on \n    * event functions\n    */\n   useEffect(() => {\n      socket =io(config.server.url + 'lobby', {\n         query: {\n            'gameId': lobbyId\n         }\n      });\n\n      socket.on('update', (lobby: ILobby) => {\n         console.log('updating');\n         setLobby((oldLobby: ILobby) => {\n            return JSON.parse(JSON.stringify(lobby));\n         });\n      });\n      socket.on('error', (err: string) => {\n         console.log(err);\n         switch(err) {\n            case 'game has already started':\n               socket.disconnect();\n         }\n      });\n      return () => {\n         console.log('lobby cleanup');\n         socket.disconnect();\n      }\n   }, [lobbyId]);\n\n   /**\n    * Monitor lobbyId. If it is changed, \n    * verify that it is a proper lobbyId.\n    * If it isn't, redirect to the error\n    * page\n    */\n   useEffect(() => {\n      axios.get(config.server.url + 'game/', {\n         params: {\n            id: lobbyId\n         }\n      }).then((res) => {\n         if (res.data.Status !== 'Lobby') {\n            history.push('/error');\n            socket.disconnect();\n         }\n      })\n      .catch(() => {\n         history.push('/error');\n         socket.disconnect();\n      })\n   }, [lobbyId, history]);\n\n   /**\n    * Monitor lobby.playing. If it is\n    * set to true, disconnect the socket,\n    * and go to the game route, and emit\n    * start\n    */\n   useEffect(() => {\n      if (lobby.playing) {\n         socket.disconnect();\n         history.push('/game/' + lobbyId + '/vote');\n      }\n   }, [lobby, history, lobbyId]);\n   ///////////////////////////////////////////////////////////////////////////\n   ///////////////////////// ONCLICK HANDLER FUNCTIONS ///////////////////////\n   ///////////////////////////////////////////////////////////////////////////\n\n   const startGame = useCallback(() => {\n      socket.emit('start');\n   }, []);\n\n   const setType = useCallback((newType: 'movie' | 'tv') => {\n      socket.emit('changeType', newType);\n   }, []);\n\n   const addGenre = useCallback((genreId: number) => {\n      socket.emit('addGenre', genreId);\n      console.log('adding genre');\n   }, []);\n\n   const delGenre = useCallback((genreId: number) => {\n      socket.emit('delGenre', genreId);\n      console.log('deleting genre');\n   }, []);\n\n   const changeMinRating = useCallback((MinRating: number) => {\n      socket.emit('changeMinRating', MinRating);\n      console.log('changing minimum rating');\n   }, []);\n\n   return (\n      <Lobby.BG>\n         <Lobby.Title>What-To-Watch</Lobby.Title>\n         <LobbyID lobbyId={lobbyId}/>\n         <LobbyType type={lobby.type} setType={setType} />\n         <LobbyMinRating curMinRating={lobby.minRating} changeMinRating={changeMinRating} />\n         <LobbyGenres type={lobby.type} addGenre={addGenre} delGenre={delGenre} curGenres={lobby.genres} />\n         <Button onClick={startGame}>START</Button>\n      </Lobby.BG>\n   );\n}","import styled from 'styled-components';\nimport * as Global from '../../global';\n\ntype NavStyleProps = {\n   onVoteView: boolean;\n}\n\nexport const Wrapper = styled.nav`\n   align-self: center;\n   padding: 30px 0 10px 0;\n   display: flex;\n   flex-basis: 800px;\n   flex-flow: row nowrap;\n   align-items: center;\n   justify-content: center;\n   > h6 {\n      flex-basis: 400px;\n      flex-shrink: 1;\n      flex-grow: 0;\n      text-align: center;\n      text-decoration: none;\n      font-size: 20px;\n   }\n   > * { // Needed since styled-components created a div\n      &:first-child {\n         color: ${(props: NavStyleProps) => props.onVoteView ? Global.color.secondary : 'white'} !important;\n      }\n      &:nth-child(2) {\n            color: ${(props: NavStyleProps) => (!props.onVoteView) ? Global.color.secondary : 'white'} !important;\n         }\n   }\n`;\n\nexport const Link = styled.a`\n\n`;","import { useState, useCallback } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport * as Nav from '../../styles/components/game/navbar';\n\nexport const GameNavbar = () => {\n   \n   const history = useHistory();\n   const location = useLocation();\n   const [onVoteView, setOnVoteView] = useState(location.pathname.includes('vote'));\n\n   const navigateTo = useCallback((loc: string) => {\n      history.push(loc);\n      setOnVoteView(loc === 'vote');\n   }, [history]);\n\n   return (\n\n      <Nav.Wrapper onVoteView={onVoteView}>\n         <h6 onClick={() => navigateTo('vote')}>Vote</h6>\n         <h6 onClick={() => navigateTo('overview')}>Overview</h6>\n      </Nav.Wrapper>\n   );\n}","import styled from 'styled-components';\n\ntype CardStyleProps = {\n   posterUrl: string;\n}\n\nexport const Main = styled.div`\n   padding-bottom: min(100%, 60vh);\n   border-radius: 5%;\n   width: 66.6%;\n   max-width: 450px;\n\n   background-image: url(\"${ (props: CardStyleProps) => props.posterUrl }\");\n   background-position: center;\n   background-size: cover;\n   box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);\n\n   transition: all 1s ease-in-out;\n`;","import styled, { keyframes, css} from 'styled-components';\nimport * as Global from '../../global';\n\nconst rotateKeyframe = () => keyframes`\n   100% {\n      transform: rotate(360deg);\n   }\n`;\n\nconst dashKeyframe = () => keyframes`\n   0% {\n      stroke-dasharray: 1, 200;\n      stroke-dashoffset: 0;\n   }\n   50% {\n      stroke-dasharray: 89, 200;\n      stroke-dashoffset: -35px;\n   }\n   100% {\n      stroke-dasharray: 89, 200;\n      stroke-dashoffset: -124px;\n   }\n`;\n\nexport const Wrapper = styled.svg`\n   position: absolute;\n   top: 0;\n   bottom: 0;\n   left: 0;\n   right: 0;\n   margin: auto;\n   height: 100%;\n   width: 100%;\n   max-width: 75px;\n   max-height: 75px;\n   animation: ${css`${rotateKeyframe()} 2s linear infinite`};\n   transform-origin: center center;\n`;\n\nexport const Circle = styled.circle`\n   stroke: ${Global.color.secondary};\n   stroke-dasharray: 89, 200;\n   stroke-dashoffset: 10;\n   animation: ${css`${dashKeyframe()} 2s linear infinite`};\n   stroke-linecap: round;\n`;\n","import { Wrapper, Circle } from '../styles/components/game/loading';\n\nexport const Loading = () => {\n\n   return (\n      <Wrapper viewBox=\"25 25 50 50\">\n         <Circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"2\" stroke-miterlimit=\"10\"/>\n    </Wrapper>\n   );\n}","import { useHistory, useParams } from 'react-router-dom';\nimport { useCallback } from 'react';\nimport { ISwipe } from '../../types/swipe';\nimport config from '../../config/config.json';\nimport * as Card from '../../styles/components/game/card';\nimport { Loading } from '../loading';\n\ninterface ICardProp {\n   card: ISwipe | undefined;\n}\ninterface GameCardParamTypes {\n   gameId: string;\n}\n\nexport const GameCard = (props: ICardProp) => {\n   const { gameId } = useParams<GameCardParamTypes>();\n   const history = useHistory();\n\n   const goToDetails = useCallback(() => {\n      if (props.card) {\n         history.push('/game/' + gameId + '/details/' + props.card.id);\n      }\n   }, [props.card, gameId, history]);\n\n   if (props.card === undefined) {\n      return (<Loading/>);\n   } else {\n      return (\n         <Card.Main posterUrl={(config.movieDb.posterUrl + props.card.poster_path).toString()} key={props.card.id} onClick={goToDetails}/>\n      );\n   }\n}","import styled, { css, keyframes } from 'styled-components';\nimport * as Global from '../../global';\n\nexport const Wrapper = styled(Global.PurpleBG)`\n   // Account for 60px nav and 20px padding\n   height: calc(100vh - 80px); \n   width: calc(100% - 20px); \n   display: flex;\n   flex-flow: column nowrap;\n   justify-content: space-around;\n   align-items: center;\n`;\n\nconst voteYesKeyframe = () => keyframes`\n50% {\n   transform: translateX(400px) rotate(45deg) rotateY(90deg);\n}\nto {\n   transform: translateX(0) rotateY(360deg);\n}\n`;\n\nconst voteNoKeyframe = () => keyframes`\n   50% {\n      transform: translateX(-400px) rotate(-45deg) rotateY(90deg);\n   }\n   to {\n      transform: translateX(0) rotateY(360deg);\n   }\n`;\n\ntype CardWrapperStyleProp = {\n   vote: 'yes' | 'no' | undefined;\n}\nexport const CardWrapper = styled.div`\n   flex-basis: 400px;\n   flex-shrink: 2;\n   display: flex;\n   justify-content: center;\n   align-items: center;\n   width: min(500px, 100%);\n   animation: ${(props: CardWrapperStyleProp) => props.vote !== undefined ? (props.vote === 'yes' ? css`${voteYesKeyframe()} .75s ease-in-out` : css`${voteNoKeyframe()} .75s ease-in-out`)   : 'none'};\n`;\n\nexport const VoteWrapper = styled.div`\n   flex-basis: 100px;\n   flex-shrink: 1;\n   width: min(500px, 100%);\n   display: flex;\n   flex-flow: row nowrap;\n   justify-content: space-around;\n`;\n\nconst Button = styled.button`\n   width: 100%;\n   height: 100%;\n   box-shadow: none;\n   border: none;\n   border-radius: 100%;\n   outline: none;\n   background-repeat: no-repeat;\n   background-position: center;\n   background-color: transparent;\n`;\n\nexport const NoButton = styled(Button)`\n   background-image: url(\"/assets/dislike-btn.svg\");\n`;\n\nexport const YesButton = styled(Button)`\n   background-image: url(\"/assets/like-btn.svg\");\n`;\n\n","import { useCallback, useEffect, useState } from 'react';\nimport { ISwipe } from '../../types/swipe';\nimport { GameCard } from '../../components/game/card';\nimport * as Vote from '../../styles/routes/game/vote';\ninterface IVoteProp {\n   vote: (v: 'yes' | 'no') => void;\n   curSwipe: ISwipe | undefined;\n   swipeIdx: number;\n}\n\nexport const GameVote = (props: IVoteProp) => {\n\n   const [curView, setCurView] = useState(<h1>Loading . . . </h1>);\n   const [curVote, setCurVote] = useState<'yes' | 'no' | undefined>(undefined);\n\n   const vote = useCallback((v: 'yes' | 'no') => {\n      /**\n       * If the current swipe is undefined,\n       * then don't do anything\n       */\n      if (props.curSwipe === undefined) {\n         return;\n      }\n\n      /**\n       * If the player already voted on\n       * this card, don't do anything\n       */\n      if (props.curSwipe.vote) {\n         return;\n      }\n\n      /**\n       * Set vote, then after 500ms,\n       * get the next card, and then\n       * after another 500ms, setVote\n       * to be undefined\n       */\n      setCurVote(v);\n      setTimeout(() => {\n         props.vote(v);\n      }, 363);\n      setTimeout(() => {\n         setCurVote(undefined);\n      }, 750);\n   }, [props]);\n\n\n   useEffect(() => {\n      if (props.swipeIdx === -99) {\n         setCurView(\n            <Vote.Wrapper>\n               <h1>No Swipes Left</h1>\n            </Vote.Wrapper>\n         );\n      }\n      else {      \n         setCurView(\n            <Vote.Wrapper>\n               <Vote.CardWrapper vote={curVote}>\n                  <GameCard card={props.curSwipe}/>\n               </Vote.CardWrapper>\n               <Vote.VoteWrapper>\n                  {/* Only allow to vote once per card by \n                        only having the button work when \n                        curVote != 'yes' or 'no' */}\n                  <Vote.NoButton onClick={()=> curVote ? ()=>{} : vote('no')}/>\n                  <Vote.YesButton onClick={()=> curVote ? ()=>{} : vote('yes')}/>\n               </Vote.VoteWrapper>\n            </Vote.Wrapper>\n         );\n      }\n   }, [props, curVote, vote]);\n\n   return curView;\n}","import styled from 'styled-components';\nimport { CircularProgressbar } from 'react-circular-progressbar';\n\nexport const Wrapper = styled.div`\n   width: 100%;\n   display: flex;\n   flex-flow: row wrap;\n   justify-content: center;\n`;\n\nexport const CardWrapper = styled.div`\n   width: 90%;\n   max-width: 500px;\n   height: auto;\n   display: flex;\n   flex-flow: column nowrap;\n   align-items: center;\n   justify-content: space-around;\n   padding: 40px 0;\n`;\n\nexport const StatusWrapper = styled.div`\n   padding-top: 20px;\n   width: min(500px, 100%);\n   display: flex;\n   flex-flow: row nowrap;\n   justify-content: center;\n   align-items: center;\n\n   > * {\n      flex-basis: 80px;\n   }\n`;\n\n\nexport const ProgressBar = styled(CircularProgressbar)`\n   width: 50px !important;\n   height: 50px;\n`;\n\ntype PlayerVoteStyleProps = {\n   vote?: 'yes' | 'no';\n}\n\nexport const PlayerVote = styled.div`\n   width: 50px;\n   height: 50px;\n   background-image: url('${(props: PlayerVoteStyleProps) => props.vote === 'no' ? 'https://cdn.glitch.com/f885813f-4542-461e-9e2c-c21e4f424ee4%2FrejectButton.e604d513.svg?v=1591586148426' : 'https://cdn.glitch.com/f885813f-4542-461e-9e2c-c21e4f424ee4%2FheartButton.1f05d0b6.svg?v=1591586129623'}');\n   background-repeat: no-repeat;\n`;","import { buildStyles } from 'react-circular-progressbar';\nimport { ISwipe } from \"../../types/swipe\"\nimport { GameCard } from \"../../components/game/card\";\nimport * as Overview from '../../styles/routes/game/overview';\nimport * as Global from '../../styles/global';\nimport 'react-circular-progressbar/dist/styles.css';\n\ninterface IGameOverviewProp {\n   swipes: Array<ISwipe>\n}\n\nexport const GameOverview = (props: IGameOverviewProp) => {\n      \n   return (\n      <Overview.Wrapper>\n         { props.swipes.sort((a: ISwipe, b: ISwipe) => { return (b.numLikes/(b.numLikes + b.numDislikes)) - (a.numLikes/(a.numLikes + a.numDislikes))}).map((swipe: ISwipe) => {\n            return (\n               <Overview.CardWrapper key={swipe.id}>\n                  <GameCard card={swipe} key={swipe.id}/>\n                  <Overview.StatusWrapper>\n                     <Overview.ProgressBar \n                        value={swipe.numLikes * 100 / (swipe.numLikes+swipe.numDislikes)}\n                        text={swipe.numLikes.toString() + '/' + (swipe.numLikes + swipe.numDislikes).toString()}\n                        strokeWidth={20}\n                        styles={buildStyles({\n                           strokeLinecap: 'butt',\n                           pathColor: Global.color.secondary,\n                           trailColor: Global.color.primaryDark\n                        })}\n                     />\n                     <Overview.PlayerVote vote={swipe.vote}/>\n                  </Overview.StatusWrapper>\n               </Overview.CardWrapper> \n            );\n         }) }\n      </Overview.Wrapper>\n   );\n}","import styled from 'styled-components';\nimport * as Global from '../../global';\n\nexport const Wrapper = styled.div`\n   align-self: center;\n   width: 95%;\n\n   display: flex;\n   flex-flow: column nowrap;\n   justify-content: center;\n\n   > div {\n      padding: 30px 0;\n   }\n`;\n\nexport const CastWrapper = styled.div`\n   flex-basis: 100%;\n   flex-grow: 1;\n   height: 275px;\n   display: flex;\n   flex-flow: column wrap;\n   overflow-x: scroll;\n`;\n\n\n\nexport const Cast = styled.div`\n   margin: 10px;\n   border-radius: 10px;\n   width: 138px;\n   height: 100%;\n   box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\n   background-color: ${Global.color.primaryDark};\n   display: flex;\n   flex-flow: column nowrap;\n   justify-content: flex-start;\n\n   > img {\n      border-top-left-radius: 10px;\n      border-top-right-radius: 10px;\n   }\n\n   > div {\n      flex-basis: 20px;\n      padding-top: 15px;\n      width: 100%;\n      text-align: center;\n      overflow-wrap: anywhere;\n      \n      > h3 {\n         font-size: 14px;\n      }\n      > h4 {\n         padding-top: 10px;\n         font-size: 13px;\n      }\n   }   \n`;\n\nexport const ReviewsWrapper = styled.div`\n   align-self: center;\n\n   display: flex;\n   flex-flow: row wrap;\n   justify-content: center;\n\n   > h2 {\n      flex-basis: 100%;\n      font-size: 50px;\n   }\n\n`;\n\nexport const Review = styled.div`\n   flex: 1 1 500px;\n   max-width: 700px;\n   margin: 30px 0;\n   box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\n   border-radius: 10px;\n   padding: 40px;\n   background-color: ${Global.color.primaryDark};\n\n   > blockquote {\n      font-size: 13px;\n      max-height: 175px;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      line-height: 1.5;\n         word-break: break-all;\n   }\n\n   > h6 {\n   //   padding-top: 5px;\n      font-size: 13px;\n   }\n   @media only screen and (min-width: 900px) {\n      margin: 30px 30px;\n   }\n`;","import axios, { AxiosResponse } from 'axios';\nimport { useState, useEffect, useMemo } from 'react';\nimport config from '../../config/config.json';\nimport { Loading } from '../loading';\nimport * as ExtraDetails from '../../styles/components/game/extra-details';\ninterface IExtraDetailsProp {\n   cardId: string;\n   type: 'movie' | 'tv' | undefined;\n}\n\nexport const GameExtraDetails = (props: IExtraDetailsProp) => {\n\n   const [details, setDetails] = useState<any>(undefined);\n\n   useEffect(() => {\n      axios.get(config.server.url + config.server.details, {\n         params: {\n            id: props.cardId,\n            type: props.type\n         }\n      }).then((res: AxiosResponse) => {\n         if (res.status === 200) {\n            setDetails(res.data);\n         }\n      });\n   }, [props.cardId, props.type]);\n\n   const cast = useMemo(() => {\n      if (!details?.credits) {\n         return [];\n      }\n      return details.credits.cast.slice(0,10);\n   }, [details]);\n\n   const reviews = useMemo(() => {\n      if (!details?.reviews) {\n         return [];\n      }\n      return details.reviews.results.slice(0,10);\n   }, [details]);\n\n   if (details !== undefined) {\n      return (\n         <ExtraDetails.Wrapper>\n            <ExtraDetails.CastWrapper>\n               \n               {cast.map((c: any) => (\n                  <ExtraDetails.Cast>\n                     <img src={config.movieDb.profileUrl + c.profile_path} alt={c.name}/>\n                     <div>\n                        <h3>{c.name}</h3>\n                        <h4>{c.character}</h4>\n                     </div>\n                  </ExtraDetails.Cast>))}\n            </ExtraDetails.CastWrapper>\n            <ExtraDetails.ReviewsWrapper>\n               <h2>Reviews</h2>\n                  {reviews.map((r: any) => (\n                     <ExtraDetails.Review>\n                        <blockquote cite={r.url}>{r.content}</blockquote>\n                        <h6>-{r.author}</h6>\n                     </ExtraDetails.Review>\n                  ))}\n            </ExtraDetails.ReviewsWrapper>\n         </ExtraDetails.Wrapper>\n\n      );\n   } else {\n      return <Loading/>;\n   }\n}","import styled from 'styled-components';\nimport * as Global from '../../global';\nimport { CircularProgressbar } from 'react-circular-progressbar';\n\n\nexport type DetailsStyleProps = {\n   bgUrl: string;\n}\n\nexport const Wrapper = styled.div`\n   height: 100%;\n   width: 100%;\n\n   &:before {\n      content: '';\n      z-index: 1;\n      position: fixed;\n      height: 100vh;\n      width: 100vw;\n      background-image: linear-gradient(rgba(59, 64, 107, .2), rgba(59, 64, 107, .9)), url('${(props: DetailsStyleProps) => props.bgUrl}');\n      background-repeat: no-repeat;\n      background-position: center;\n      background-size: cover;\n   }\n`;\n\nexport const ContentWrapper = styled.div`\n   backdrop-filter: blur(8px);\n   background-color: transparent;\n   position: relative;\n   z-index: 10;\n   display: flex;\n   flex-flow: column nowrap;\n   align-items: center;\n`;\n\nexport const BackButton = styled(Global.Button)`\n   position: relative;\n   z-index: 10;\n   align-self: flex-start;\n\n`;\n\nexport const Card = styled.div`\n   margin: 300px 0;\n   box-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);\n   border-radius: 30px;\n   width: min(1500px, 100%);\n   background-color: ${Global.color.primary};\n\n   display: flex;\n   flex-flow: row nowrap;\n`;\n\ntype DetailsPosterImageProps = {\n   posterUrl: string;\n}\n\nexport const PosterImage = styled.div`\n   display: none;\n   flex-basis: 40%;\n   flex-grow: 1;\n   flex-shrink: 1;\n   border-radius: 30px 0 0 30px;\n   background-image: url(\"${ (props: DetailsPosterImageProps) => props.posterUrl }\") ;\n   background-position: center;\n   background-size: contain;\n\n   @media only screen and (max-width: 900px) {\n      display: none;\n   }\n`;\n\nexport const InfoWrapper = styled.div`\n   flex-grow: 1;\n   flex-shrink: 2;\n   padding: min(5%, 70px);\n   display: flex;\n   flex-flow: column nowrap;\n   align-items: flex-start;\n   > * {\n      padding-top: 20px;\n   }\n`;\n\nexport const Title = styled.h2`\n   font-size: max(3vw, 30px);\n   text-align: center;\n`;\n\nexport const GenresWrapper = styled.div`\n   display: flex;\n   flex-flow: row wrap;\n`;\n\nexport const GenreItem = styled.h4`\n   margin: 5px;\n   border-radius: 5px;\n   padding: 10px;\n   background-color: ${Global.color.primaryDark};\n\n`;\n\nexport const DescriptionVoteWrapper = styled.div`\n   width: 100%;\n   display: flex;\n   flex-flow: row nowrap;\n   justify-content: space-around;\n   align-items: center;\n   @media (max-width: 500px) {\n      flex-flow: column;\n      justify-content: space-around;\n      align-items: space-around;\n   }\n`;\n\nexport const Description = styled.p`\n   padding: 30px;\n   font-size: 14px;\n   line-height: 1.2\n`;\n\nexport const VoteWrapper = styled.div`\n   flex-shrink: 0;\n   flex-basis: 80px !important;\n\n   > h5 {\n      margin-top: 10px;\n      font-size: 12px;\n      text-align: center;\n   }\n`;\n\nexport const VoteProgressBar = styled(CircularProgressbar)`\n   height: 50px;\n`;\n","import { useParams, useHistory } from 'react-router-dom';\nimport { buildStyles } from 'react-circular-progressbar';\nimport { ISwipe } from '../../types/swipe';\nimport config from '../../config/config.json';\nimport genre from '../../config/genres.json';\nimport { useState, useEffect, useMemo } from 'react';\nimport { GameExtraDetails } from '../../components/game/extra-details';\nimport * as Details from '../../styles/routes/game/details';\nimport * as Global from '../../styles/global';\n\ninterface ICardProp {\n   cards: Array<ISwipe>;\n}\ninterface ParamTypes {\n   cardId: string\n}\n\nexport const CardDetails = (props: ICardProp) => {\n\n   const  { cardId } = useParams<ParamTypes>();\n   const history = useHistory();\n   \n   const curCard = useMemo<ISwipe | undefined>(() => {\n      return props.cards.find((card) => card.id === parseInt(cardId));\n   }, [cardId, props.cards]);\n\n   const type = useMemo<'movie' | 'tv' | undefined>(() => {\n      if (curCard?.original_title) {\n         return 'movie';\n      } else if (curCard?.original_name) {\n         return 'tv';\n      } else {\n         return undefined;\n      }\n   }, [curCard]);\n\n   const [genres, setGenres ] = useState<Array<string>>([]);\n\n   useEffect(() => {\n      if (curCard?.genre_ids === undefined) {\n         setGenres([]);\n      } else {\n         const genres = curCard?.genre_ids.map((id) => {\n            const genreName = genre[type || 'movie'].find((g) => g.id === id)?.name || '';\n            return genreName;\n         });\n         setGenres(genres);\n      }\n   }, [type, curCard?.genre_ids]);\n\n   const bgUrl = useMemo<string>(() => {\n      if (curCard && curCard.backdrop_path) {\n         return config.movieDb.bgUrl + curCard.backdrop_path;\n      } else {\n         history.push('/error');\n         return '';\n      }\n   }, [curCard, history]);\n\n   const posterUrl = useMemo<string>(() => {\n      if (curCard && curCard.poster_path) {\n         return config.movieDb.posterUrl + curCard.poster_path;\n      } else {\n         history.push('/error');\n         return '';\n      }\n   }, [curCard, history]);\n\n   useEffect(() => {\n      if (curCard === undefined) {\n         console.log(curCard);\n         history.push('/error');\n      }\n   }, [curCard, history]);\n\n\n   return (\n      <Details.Wrapper bgUrl={bgUrl}>\n         <Details.ContentWrapper>\n            <Details.BackButton onClick={()=> history.goBack()}>Go Back</Details.BackButton>\n            <Details.Card>\n               <Details.PosterImage posterUrl={posterUrl}/>\n               <Details.InfoWrapper>\n                  <Details.Title>{curCard?.title}</Details.Title>\n                  <Details.GenresWrapper>\n                     {genres.map((g) => <Details.GenreItem>{g}</Details.GenreItem>)}\n                  </Details.GenresWrapper>\n                  <Details.DescriptionVoteWrapper>\n                     <Details.VoteWrapper>\n                        <Details.VoteProgressBar \n                              value={(curCard?.vote_average || 0) * 10}\n                              text={curCard?.vote_average?.toString()}\n                              strokeWidth={20}\n                              styles={buildStyles({\n                                 strokeLinecap: 'butt',\n                                 pathColor: Global.color.secondary,\n                                 trailColor: Global.color.primaryDark\n                              })}\n                        />\n                        <h5>User Vote</h5>\n                     </Details.VoteWrapper>\n                     <Details.Description>{curCard?.overview}</Details.Description>\n                  </Details.DescriptionVoteWrapper>\n                  <GameExtraDetails cardId={cardId} type={type}/>\n               </Details.InfoWrapper>\n            </Details.Card>\n         </Details.ContentWrapper>   \n      </Details.Wrapper>\n   );\n}","import styled from 'styled-components';\nimport * as Global from '../global';\n\nexport const Wrapper = styled.div`\n   width: 95%;   \n   height: 100%;\n\n   display: flex;\n   flex-flow: column nowrap;\n   justify-content: center;\n   align-items: center;\n`;\n\nexport const GoHomeButton = styled.span`\n   color: ${Global.color.secondary};\n`;\n\nexport const Apology = styled.h1`\n   font-size: 50px;\n   text-align: center;\n   margin-bottom: 30px;\n`;\n\nexport const Solution = styled.h3`\n   font-size: 25px;\n   text-align: center;\n`;","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Switch,Route, useParams, useHistory } from \"react-router-dom\";\nimport { io, Socket } from \"socket.io-client\";\nimport { GameNavbar } from '../../components/game/navbar';\nimport { GameVote } from './vote';\nimport { GameOverview } from './overview';\nimport { CardDetails } from './details';\nimport { InvalidGame } from \"../invalid\";\nimport config from '../../config/config.json';\nimport { ISwipe } from \"../../types/swipe\";\nimport { IGame } from \"../../types/game\";\nimport axios from \"axios\";\ninterface IGameParamTypes {\n   gameId: string;\n};\nlet socket: Socket;\nexport const GameRoute = () => {\n\n   /* Get the game ID, and if invalid, redirect */\n   const { gameId } = useParams<IGameParamTypes>();\n   const [numPlayers, setNumPlayers] = useState<number>(0);\n   const [swipes, setSwipes] = useState<Array<ISwipe>>([]);\n   const [curSwipeIdx, setCurSwipeIdx] = useState<number>(0);\n   const history = useHistory();\n   ///////////////////////////////////////////////////////////////////////////\n   /////////////////////////// USE EFFECT FUNCTIONS //////////////////////////\n   ///////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Monitor lobbyId. If it is changed, \n    * verify that it is a proper lobbyId.\n    * If it isn't, redirect to the error\n    * page\n    */\n   useEffect(() => {\n      axios.get(config.server.url + 'game', {\n         params: {\n            id: gameId\n         }\n      }).then((res) => {\n         if (res.data.Status !== 'Game') {\n            history.push('/error');\n            socket.disconnect();\n         }\n      })\n      .catch(() => {\n         history.push('/error');\n         socket.disconnect();\n      })\n   }, [gameId, history]);\n\n   /**\n    * When the component gets mounted, \n    * initiate the socketio client and \n    * define all of the socket.on \n    * event functions\n    */\n   useEffect(() => {\n\n      /* Init socket io client */\n      socket = io(config.server.url + 'game', {\n         query: {\n            'gameId': gameId\n         }\n      });\n\n      socket.on('newSwipes', (swipes: Array<ISwipe>) => {\n         console.log('Got new swipes');\n         setSwipes((oldSwipes) => {\n            return oldSwipes.concat(...swipes);\n         });\n      });\n\n      /**\n       * If there aren't any more swipes, \n       * just disconnect\n       */\n      socket.on('noNewSwipes', () => {\n         console.log('No new swipes left');\n         \n         /**\n          * Setting curSwipeIdx to -99\n          * indicates that there are no\n          * more cards left\n          */\n         setCurSwipeIdx((oldIdx) => {\n            if (oldIdx === -1) {\n               return -99;\n            }\n            return oldIdx;\n         });\n      });\n\n      socket.on('newConn', (numPlayers: number) => {\n         console.log('A new player joined');\n         setNumPlayers(numPlayers);\n      });\n\n      socket.on('newDisconn', (numPlayers: number) => {\n         console.log('A player left');\n         setNumPlayers(numPlayers);\n      });\n\n      socket.on('connection', (game: IGame) => {\n         console.log('Connected');\n         setNumPlayers(game.numPlayers);\n\n         /**\n          * Setting curSwipeIdx to -99\n          * indicates that there are no\n          * more cards left\n          */\n         if (game.swipes.length === 0) {\n            setCurSwipeIdx(-99);\n         }\n         setSwipes(game.swipes);\n      });\n\n      socket.on('voted', ({swipeId, vote}: {swipeId: number, vote: 'yes' | 'no'}) => {\n         setSwipes((oldSwipes) => {\n            const idx = oldSwipes.findIndex((swipe) => swipe.id === swipeId);\n            if (idx === -1) {\n               return oldSwipes;\n            }\n            const newSwipes = JSON.parse(JSON.stringify(oldSwipes));\n            vote === 'yes' ? ++newSwipes[idx].numLikes : ++newSwipes[idx].numDislikes;\n            return newSwipes;\n         });\n      });\n\n      socket.on('error', (err: Error) => {\n         console.log(err);\n      });\n      \n      /**\n       * Return a function that disconnects from \n       * the socket so we can cleanup\n       */\n      return () => {\n         console.log('game cleanup');\n         socket.disconnect();\n      }\n   }, [gameId]);\n   \n   /**\n    * Monitor @swipes to watch when new\n    * cards get added. If they get added,\n    * and if @curSwipeIdx == -1, it means that\n    * we were waiting for more cards, so we \n    * need to update the current card\n    */\n   useEffect(() => {\n      if (curSwipeIdx === -1) {\n         setCurSwipeIdx(swipes.findIndex((swipe) => swipe.vote === undefined));\n      }\n   }, [swipes, curSwipeIdx]);\n   ///////////////////////////////////////////////////////////////////////////\n   ///////////////////////// ONCLICK HANDLER FUNCTIONS ///////////////////////\n   ///////////////////////////////////////////////////////////////////////////\n\n   /**\n    * A function that can be passed as a\n    * param to the vote card to vote \n    * yes or no\n    * @param vote the vote\n    */\n   const voteFunc = useCallback((vote: 'yes' | 'no') => {\n      \n      if (vote === 'yes') {\n         socket.emit('vote', { gameId: gameId, swipeId: swipes[curSwipeIdx].id, vote: 'yes' });\n         swipes[curSwipeIdx].vote = 'yes';\n      } else {\n         socket.emit('vote', { gameId: gameId, swipeId: swipes[curSwipeIdx].id, vote: 'no' });\n         swipes[curSwipeIdx].vote = 'no';\n      }\n\n      /**\n       * After voting, set the curSwipeIdx to the next\n       * one. If curSwipeIdx === -1, request for more \n       * swipes. When they are receieved a useEffect \n       * call will update curSwipeIdx. \n       */\n      const nextSwipe = swipes.findIndex((swipe) => swipe.vote === undefined);\n      if (nextSwipe === -1) {\n         socket.emit('genNewSwipes');\n         console.log('getting new swipes');\n      }\n      setCurSwipeIdx(nextSwipe);\n   }, [swipes, gameId, curSwipeIdx]);\n\n   return (\n         <Switch>\n            <Route exact path=\"/game/:gameId/vote\">\n               <GameNavbar/>\n               <GameVote vote={voteFunc} curSwipe={swipes[curSwipeIdx]} swipeIdx={curSwipeIdx}/>\n            </Route>\n            <Route exact path=\"/game/:gameId/overview/\">\n               <GameNavbar/>\n               <GameOverview swipes={swipes.filter((x) => x.vote !== undefined)} />\n            </Route>\n            <Route exact path=\"/game/:gameId/details/:cardId\">\n               <CardDetails cards={swipes}/>\n            </Route>\n            <Route path=\"/game\">\n               <InvalidGame apology=\"Sorry, this page doesn't exist :(\"/>\n            </Route>\n         </Switch>\n   );\n}","import { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\"\nimport * as Invalid from '../styles/routes/invalid';\n\nexport interface IInvalidProp {\n   apology: string;\n};\n\nexport const InvalidGame = (props: IInvalidProp) => {\n   \n   const history = useHistory();\n\n   const goHome = useCallback(() => {\n      history.push('/');\n   }, [history]);\n\n   return (\n      <Invalid.Wrapper>\n         <Invalid.Apology>{props.apology}</Invalid.Apology>\n         <Invalid.Solution>Click <Invalid.GoHomeButton onClick={() => goHome()}>here</Invalid.GoHomeButton> to go to the home page</Invalid.Solution>\n      </Invalid.Wrapper>\n   );\n}","import styled from 'styled-components';\nimport * as Global from '../global';\n\nexport const BG = styled(Global.PurpleBG)`\n   display: flex;\n   flex-flow: column;\n   align-items: center;\n   justify-content: space-around;\n   width: calc(100% - 20px);\n   height: calc(100% - 20px);\n`;\n\nexport const Header = styled.div`\n   flex-basis: 1;\n   flex-grow: 1;\n   display: flex;\n   flex-flow: column;\n   align-items: center;\n   justify-content: center;\n   width: calc(80% - 20px);\n`;\n\nexport const Title = styled.h1`\n   font-size: max(10vw, 60px);\n   text-align: center;\n`;\n\nexport const Description = styled.h6`\n   font-size: max(1.2vw, 12px);\n   text-align: center;\n`;\n\nexport const GameSection = styled.div`\n   flex-basis: 2;\n   flex-grow: 2;\n   display: flex;\n   flex-flow: column;\n   align-items: center;\n   justify-content: flex-start;\n`;\n\nexport const JoinSection = styled.div`\n   display: flex;\n   flex-flow: row nowrap;\n   align-items: center;\n   justify-content: center;\n   @media (max-width: 410px) {\n      flex-flow: column;\n      justify-content: space-around;\n      align-items: space-around;\n   }\n`;\n\nexport const JoinButton = styled(Global.Button)`\n   disabled: ${(props: any) => props.disabled};\n`;\n\nexport const NewButton = styled(Global.Button)`\n   background-color: ${Global.color.secondary};\n   border-color: ${Global.color.secondary};\n`;\n\nexport const OrHeader = styled.h2`\n   font-size: 30px;\n   margin: 10px;\n`;","import { useEffect, useState, useCallback } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport config from '../config/config.json';\nimport ReactCodeInput from 'react-code-input';\nimport * as Home from '../styles/routes/home';\n\nexport const HomeRoute = function() {\n\n   const [joinCode, _setJoinCode] = useState<string>('');\n   const [validCode, setValidCode] = useState<boolean>(false)\n   const history = useHistory();\n   /**\n    * These two functions are just used to\n    * wrap the setJoinCode so that we can\n    * check that it's the proper length\n    */\n   const setJoinCode = (code: string) => {\n      if (code.length <= 5) {\n         _setJoinCode(code);\n      }\n   }\n\n   /**\n    * newGame should use useRef vs useState\n    * since it isn't ever being updated to the \n    * dom\n    */\n   const newGame = useCallback(() => {\n      axios.post(config.server.url + config.server.newGame)\n         .then((res) => {\n            if (res.status === 200) {\n               setJoinCode(res.data.id);\n\n               /**\n                * Add a small delay just to make sure\n                * we can enter the game\n                */\n               setTimeout(() => {\n                  history.push('/lobby/' + res.data.id);\n               }, 250);\n            }\n         })\n         .catch((err)=> {\n            console.log(err);\n         });\n   },[history]);\n\n   /**\n    * Check if join code is valid each time it\n    * changes its value. \n    */\n   useEffect(() => {\n      if (joinCode.length === 5) {\n         axios.get(config.server.url + 'game/', {\n            params: {\n               id: joinCode\n            }\n         }).then((res) => {\n            if (res.status === 200) {\n               setValidCode(true);\n            } else {\n               setValidCode(false);\n            }\n         }).catch(() => {\n            setValidCode(false);\n         });\n      }\n\n   }, [joinCode]);\n\n   return (\n      <Home.BG>\n         <Home.Header>\n            <Home.Title>What-To-Watch</Home.Title>\n            <Home.Description>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </Home.Description>\n         </Home.Header>\n         <Home.GameSection>\n            <Home.NewButton onClick={newGame}>NEW GAME</Home.NewButton>\n            <Home.OrHeader>OR</Home.OrHeader>\n            <Home.JoinSection>\n               <ReactCodeInput type=\"text\" fields={5} name=\"joinCode\" inputMode=\"full-width-latin\" onChange={setJoinCode} value={joinCode || '     '}/>\n               <Link to={'/lobby/' + joinCode}>\n                  <Home.JoinButton disabled={!validCode}>JOIN</Home.JoinButton>\n               </Link>\n            </Home.JoinSection>\n         </Home.GameSection>\n      </Home.BG>\n   );\n}","import { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport { LobbyRoute } from './lobby';\nimport { GameRoute } from './game/game';\nimport { HomeRoute } from './home';\nimport { InvalidGame } from './invalid';\n\nexport const Router = function() {\n\n   return (\n      <BrowserRouter>\n         <Switch>\n            <Route exact path=\"/lobby/:lobbyId\">\n               <LobbyRoute/>\n            </Route>\n            <Route path=\"/game/:gameId\">\n               <GameRoute/>\n            </Route>\n            <Route exact path=\"/\">\n               <HomeRoute/>\n            </Route>\n            <Route path=\"/\">\n               <InvalidGame apology=\"Sorry, this game or page doesn't exist :(\"/>\n            </Route>\n         </Switch>\n      </BrowserRouter>\n   );\n}","import React from 'react';\nimport { Router } from './routes/router';\n\nexport default function App() {\n   return (\n      <Router/>\n   );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport './styles/index.css';\n\nReactDOM.render(\n   <React.StrictMode>\n      <App/>\n   </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}