[{"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/app.tsx":"1","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/router.tsx":"2","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/temp-store.tsx":"3","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/index.tsx":"4","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/vote.tsx":"5","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/lobby.tsx":"6","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/overview.tsx":"7","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/home.tsx":"8","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/game.tsx":"9","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/config.ts":"10","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/details.tsx":"11","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/navbar.tsx":"12","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/card.tsx":"13","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/invalid.tsx":"14"},{"size":310,"mtime":1610170804554,"results":"15","hashOfConfig":"16"},{"size":658,"mtime":1610238929914,"results":"17","hashOfConfig":"16"},{"size":4308,"mtime":1610174805791,"results":"18","hashOfConfig":"16"},{"size":203,"mtime":1610153272451,"results":"19","hashOfConfig":"16"},{"size":570,"mtime":1610175700376,"results":"20","hashOfConfig":"16"},{"size":4002,"mtime":1610258482203,"results":"21","hashOfConfig":"16"},{"size":396,"mtime":1610175676797,"results":"22","hashOfConfig":"16"},{"size":1947,"mtime":1610247031214,"results":"23","hashOfConfig":"16"},{"size":1917,"mtime":1610243041909,"results":"24","hashOfConfig":"16"},{"size":264,"mtime":1610243036150,"results":"25","hashOfConfig":"16"},{"size":729,"mtime":1610235558369,"results":"26","hashOfConfig":"16"},{"size":204,"mtime":1610236391257,"results":"27","hashOfConfig":"16"},{"size":681,"mtime":1610237251784,"results":"28","hashOfConfig":"16"},{"size":208,"mtime":1610239334427,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"16103i4",{"filePath":"32","messages":"33","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/app.tsx",["64","65","66","67","68"],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/router.tsx",["69"],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/temp-store.tsx",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/index.tsx",[],["70","71"],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/vote.tsx",["72","73"],"import { Link } from 'react-router-dom';\nimport { config } from '../../config';\nimport { ICardModel } from '../../types/card';\n\nimport { GameCard } from './card';\ninterface IVoteProp {\n   vote: (v: 'yes' | 'no') => void;\n   curSwipe: ICardModel;\n}\n\nexport const GameVote = (props: IVoteProp) => {\n   return (\n      <div>\n         <h1>GameVote</h1>\n         <GameCard card={props.curSwipe}/>\n         <div>\n            <button onClick={()=>props.vote('yes')}>Yes</button>\n            <button onClick={()=>props.vote('no')}>No</button>\n         </div>\n      </div>\n   );\n}",["74","75"],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/lobby.tsx",["76","77"],"import { Link, useParams, useHistory } from 'react-router-dom';\nimport { useEffect, useRef, useState } from 'react';\nimport { io, Socket } from \"socket.io-client\";\nimport axios from 'axios';\nimport { config } from '../config';\ninterface LobbyParamTypes {\n   lobbyId: string;\n}\n\ninterface Lobby {\n   id: string;\n   playing: boolean;\n   type: 'movie' | 'tv';\n   numPlayers: number;\n   genre: Array<number>;\n   minRating: number;\n}\n\nlet socket: Socket;\nexport const LobbyRoute = function() {\n   \n   const { lobbyId } = useParams<LobbyParamTypes>();\n   const history = useHistory();\n   const [lobby, setLobby] = useState<Lobby>({\n      id: lobbyId,\n      playing: false,\n      numPlayers: 1,\n      type: 'movie',\n      genre: [],\n      minRating: 1\n   });\n   let updateFlag = useRef<boolean>(true);\n\n   /* Init socket io client and add all functions */\n   useEffect(() => {\n      socket =io(config.server.url + '/lobby', {\n         query: {\n            'gameId': lobbyId\n         }\n      });\n      socket.on('connection', () => {\n         console.log('connected');\n      });\n\n      socket.on('update', (lobby: Lobby) => {\n         console.log('new value');\n         updateFlag.current = false;\n      //   setLobby(lobby);\n         updateFlag.current = false;\n      });\n      socket.on('conn', (newLobby: Lobby) => {\n         console.log('new conn')\n         setLobby({\n            ...lobby,\n            type: newLobby.type,\n            genre: newLobby.genre,\n            numPlayers: newLobby.numPlayers,\n            minRating: newLobby.minRating\n         });\n      })\n\n      /**\n       * Need mySocket so we can reference\n       * it when the cleanup is happening\n       */\n      return () => {\n         console.log('cleanup')\n         socket.disconnect();\n      }\n   }, []);\n   /**\n    * Check that lobbyId is valid each time it\n    * changes its value. If it isn't redirect \n    * to the invalid page\n    */\n   useEffect(() => {\n      axios.get('http://' + config.server.url + '/game', {\n         params: {\n            id: lobbyId\n         }\n      }).then((res) => {\n         if (res.status !== 200) {\n            history.push('/error');\n            socket.disconnect();\n         }\n      })\n      .catch(() => {\n         history.push('/error');\n         socket.disconnect();\n      })\n   }, [lobbyId]);\n\n\n\n   const setType = useRef((newType: 'movie' | 'tv') => {\n      setLobby({\n         ...lobby,\n         type: newType\n      });\n      socket.emit('changeType', newType);\n   })\n\n\n   /**\n    * The following handle the rating\n    */\n   const setMinRating = useRef((rating: number) => {\n\n      if (rating > 0 && rating < 10) {\n         lobby.minRating = rating;\n         setLobby({\n            ...lobby,\n            minRating: rating\n         });\n   //      socket.emit('change', 'tv-show');\n      }\n   });\n\n   const handleRatingChange = useRef((event: any) => {\n      const newRating = parseInt(event.target.value);\n      setMinRating.current(newRating);\n   });\n\n   const start = useRef(() => {\n      socket.emit('start');\n      console.log('yo')\n   });\n\n\n   return (\n      <div>\n         \n         <h1>Lobby</h1>\n         <h2>LobbyId: {lobbyId}</h2>\n\n         <button onClick={() => setLobby({...lobby, minRating: lobby.minRating-1})}>-</button>\n         <input type=\"text\" value={lobby.minRating.toString()} onChange={handleRatingChange.current}/>\n         <button onClick={() => setMinRating.current(lobby.minRating+1)}>+</button>\n\n         <form>\n            <input type=\"radio\" id=\"tvBtn\" name=\"type\" value=\"tv\" checked={lobby.type === 'tv'} onChange={()=>setType.current('tv')}/>\n            <label htmlFor=\"tv\">TV-Show</label>\n            <input type=\"radio\" id=\"movieBtn\" name=\"type\" value=\"movie\" checked={lobby.type === 'movie'} onChange={()=>setType.current('movie')}/>\n            <label htmlFor=\"movie\">Movie</label>\n         </form>\n\n         <Link to={'/game/' + lobbyId + '/vote'}>\n            <button onClick={()=>start.current()}>Start Game</button>\n         </Link>\n      </div>\n   )\n}","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/overview.tsx",["78"],"import { useEffect } from \"react\"\nimport { ISwipeModel } from \"../../types/swipe\"\nimport { GameCard } from \"./card\";\n\ninterface IGameOverviewProp {\n   swipes: Array<ISwipeModel>\n}\n\nexport const GameOverview = (props: IGameOverviewProp) => {\n      \n   return (\n      <div>\n         <h1>Game Overview</h1>\n         { props.swipes.map((swipe) => <GameCard card={swipe.card}/>) }\n      </div>\n   );\n}","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/home.tsx",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/game.tsx",["79","80","81","82","83","84","85","86","87"],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/config.ts",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/details.tsx",["88"],"import { ISwipeModel } from '../../types/swipe';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport { ICardModel } from '../../types/card';\nimport { config } from '../../config';\n\ninterface ICardProp {\n   cards: Array<ICardModel>;\n}\ninterface ParamTypes {\n   cardId: string\n }\nexport const CardDetails = (props: ICardProp) => {\n   const  { cardId } = useParams<ParamTypes>();\n   const history = useHistory();\n\n   return (\n      <div style={{background: 'url(' + config.movieDb.bgUrl + (props.cards.find((card) => card.id === parseInt(cardId)) || props.cards[0]).backdrop_path + ')', height: '400px'}}>\n         <button onClick={()=> history.goBack()}>Go Back</button>\n         <h1>Details</h1>\n      </div>\n   );\n}","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/navbar.tsx",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/card.tsx",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/invalid.tsx",[],{"ruleId":"89","severity":1,"message":"90","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":22},{"ruleId":"89","severity":1,"message":"93","line":3,"column":24,"nodeType":"91","messageId":"92","endLine":3,"endColumn":34},{"ruleId":"89","severity":1,"message":"94","line":4,"column":10,"nodeType":"91","messageId":"92","endLine":4,"endColumn":20},{"ruleId":"89","severity":1,"message":"95","line":4,"column":22,"nodeType":"91","messageId":"92","endLine":4,"endColumn":35},{"ruleId":"89","severity":1,"message":"96","line":5,"column":10,"nodeType":"91","messageId":"92","endLine":5,"endColumn":20},{"ruleId":null,"fatal":true,"severity":2,"message":"97","line":26,"column":12},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"89","severity":1,"message":"102","line":1,"column":10,"nodeType":"91","messageId":"92","endLine":1,"endColumn":14},{"ruleId":"89","severity":1,"message":"103","line":2,"column":10,"nodeType":"91","messageId":"92","endLine":2,"endColumn":16},{"ruleId":"98","replacedBy":"104"},{"ruleId":"100","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":70,"column":7,"nodeType":"108","endLine":70,"endColumn":9,"suggestions":"109"},{"ruleId":"106","severity":1,"message":"110","line":91,"column":7,"nodeType":"108","endLine":91,"endColumn":16,"suggestions":"111"},{"ruleId":"89","severity":1,"message":"112","line":1,"column":10,"nodeType":"91","messageId":"92","endLine":1,"endColumn":19},{"ruleId":"89","severity":1,"message":"95","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":30},{"ruleId":"89","severity":1,"message":"113","line":1,"column":32,"nodeType":"91","messageId":"92","endLine":1,"endColumn":40},{"ruleId":"89","severity":1,"message":"114","line":1,"column":42,"nodeType":"91","messageId":"92","endLine":1,"endColumn":56},{"ruleId":"89","severity":1,"message":"94","line":1,"column":69,"nodeType":"91","messageId":"92","endLine":1,"endColumn":79},{"ruleId":"89","severity":1,"message":"115","line":2,"column":35,"nodeType":"91","messageId":"92","endLine":2,"endColumn":43},{"ruleId":"89","severity":1,"message":"96","line":7,"column":10,"nodeType":"91","messageId":"92","endLine":7,"endColumn":20},{"ruleId":"89","severity":1,"message":"116","line":9,"column":10,"nodeType":"91","messageId":"92","endLine":9,"endColumn":20},{"ruleId":"89","severity":1,"message":"117","line":31,"column":23,"nodeType":"91","messageId":"92","endLine":31,"endColumn":36},{"ruleId":"89","severity":1,"message":"118","line":32,"column":23,"nodeType":"91","messageId":"92","endLine":32,"endColumn":36},{"ruleId":"89","severity":1,"message":"119","line":1,"column":10,"nodeType":"91","messageId":"92","endLine":1,"endColumn":21},"@typescript-eslint/no-unused-vars","'initialState' is defined but never used.","Identifier","unusedVar","'ActionType' is defined but never used.","'useReducer' is defined but never used.","'createContext' is defined but never used.","'IGameModel' is defined but never used.","Parsing error: Identifier expected.","no-native-reassign",["120"],"no-negated-in-lhs",["121"],"'Link' is defined but never used.","'config' is defined but never used.",["120"],["121"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'lobby' and 'lobbyId'. Either include them or remove the dependency array. You can also do a functional update 'setLobby(l => ...)' if you only need 'lobby' in the 'setLobby' call.","ArrayExpression",["122"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["123"],"'useEffect' is defined but never used.","'Dispatch' is defined but never used.","'SetStateAction' is defined but never used.","'Redirect' is defined but never used.","'ICardModel' is defined but never used.","'setNextSwipes' is assigned a value but never used.","'setPrevSwipes' is assigned a value but never used.","'ISwipeModel' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [lobby, lobbyId]",{"range":"128","text":"129"},"Update the dependencies array to be: [history, lobbyId]",{"range":"130","text":"131"},[1767,1769],"[lobby, lobbyId]",[2288,2297],"[history, lobbyId]"]