[{"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/routes/home.ts":"1","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/components/game/loading.ts":"2","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/index.tsx":"3","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/lobby/genres.tsx":"4","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/lobby/min-rating.tsx":"5","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/lobby/id.tsx":"6","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/lobby/type.tsx":"7","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/game/vote.tsx":"8","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/game/overview.tsx":"9","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/game/details.tsx":"10","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/navbar.tsx":"11","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/routes/invalid.ts":"12","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/routes/game/details.ts":"13","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/routes/game/overview.ts":"14","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/routes/game/vote.ts":"15","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/global.ts":"16","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/card.tsx":"17","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/routes/lobby.ts":"18","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/home.tsx":"19","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/game/game.tsx":"20","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/lobby.tsx":"21","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/components/game/card.ts":"22","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/extra-details.tsx":"23","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/components/game/extra-details.ts":"24","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/app.tsx":"25"},{"size":1425,"mtime":1610680663349,"results":"26","hashOfConfig":"27"},{"size":988,"mtime":1611026301196,"results":"28","hashOfConfig":"27"},{"size":230,"mtime":1610592924742,"results":"29","hashOfConfig":"27"},{"size":1044,"mtime":1611029350120,"results":"30","hashOfConfig":"27"},{"size":960,"mtime":1611030612334,"results":"31","hashOfConfig":"27"},{"size":665,"mtime":1611125753361,"results":"32","hashOfConfig":"27"},{"size":881,"mtime":1611029821862,"results":"33","hashOfConfig":"27"},{"size":2125,"mtime":1611032471255,"results":"34","hashOfConfig":"27"},{"size":1650,"mtime":1611032468377,"results":"35","hashOfConfig":"27"},{"size":3906,"mtime":1611123735632,"results":"36","hashOfConfig":"27"},{"size":716,"mtime":1611042950338,"results":"37","hashOfConfig":"27"},{"size":519,"mtime":1611125704359,"results":"38","hashOfConfig":"27"},{"size":2897,"mtime":1611125580116,"results":"39","hashOfConfig":"27"},{"size":1251,"mtime":1611107576120,"results":"40","hashOfConfig":"27"},{"size":1801,"mtime":1611095411835,"results":"41","hashOfConfig":"27"},{"size":805,"mtime":1611031622616,"results":"42","hashOfConfig":"27"},{"size":1002,"mtime":1611126149312,"results":"43","hashOfConfig":"27"},{"size":459,"mtime":1611029502451,"results":"44","hashOfConfig":"27"},{"size":2887,"mtime":1611125662034,"results":"45","hashOfConfig":"27"},{"size":6811,"mtime":1611100536899,"results":"46","hashOfConfig":"27"},{"size":4242,"mtime":1611099915337,"results":"47","hashOfConfig":"27"},{"size":508,"mtime":1611026299047,"results":"48","hashOfConfig":"27"},{"size":2138,"mtime":1611125038757,"results":"49","hashOfConfig":"27"},{"size":1906,"mtime":1611125518603,"results":"50","hashOfConfig":"27"},{"size":147,"mtime":1610170822287,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16103i4",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/routes/home.ts",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/components/game/loading.ts",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/index.tsx",[],["111","112"],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/lobby/genres.tsx",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/lobby/min-rating.tsx",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/lobby/id.tsx",["113"],"import {CopyToClipboard} from 'react-copy-to-clipboard';\n\nimport * as ID from '../../styles/components/lobby/id';\n\ninterface IIDProps {\n   lobbyId: string;\n}\n\nexport const LobbyID = (props: IIDProps) => {\n\n   return (\n      <ID.Wrapper>\n         <ID.Element>{props.lobbyId[0]}</ID.Element>\n         <ID.Element>{props.lobbyId[1]}</ID.Element>\n         <ID.Element>{props.lobbyId[2]}</ID.Element>\n         <ID.Element>{props.lobbyId[3]}</ID.Element>\n         <ID.Element>{props.lobbyId[4]}</ID.Element>\n         {/* <CopyToClipboard text={props.lobbyId}>\n            <ID.ShareButton>SHARE</ID.ShareButton>\n\n         </CopyToClipboard> */}\n      </ID.Wrapper>\n   );\n}","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/lobby/type.tsx",["114"],"import { color, Button } from '../../styles/global';\nimport * as Type from '../../styles/components/lobby/type';\nimport Switch from 'react-switch';\n\nconst TypeSwitchParams = {\n      checkedIcon: false,\n      uncheckedIcon: false,\n      offColor: color.primaryDark,\n      onColor: color.primaryDark,\n      offHandleColor: color.secondary,\n      onHandleColor: color.secondary,\n      height: 22,\n      handleDiameter: 26\n}\n\ninterface LobbyTypeProps {\n   type: 'tv' | 'movie';\n   setType: (t: 'tv' | 'movie') => void;\n}\n\n\n\nexport const LobbyType = (props: LobbyTypeProps) => {\n\n   return (\n      <Type.Wrapper>\n         <Type.Category>MOVIE</Type.Category>\n         <Switch checked={props.type==='tv'} onChange={(checked) => checked ? props.setType('tv') : props.setType('movie')} {...TypeSwitchParams}/>\n         <Type.Category>TV SHOW</Type.Category>\n      </Type.Wrapper>\n\n   );\n\n}","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/game/vote.tsx",[],["115","116"],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/game/overview.tsx",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/game/details.tsx",["117","118"],"import { useParams, useHistory } from 'react-router-dom';\nimport { ISwipe } from '../../types/swipe';\nimport config from '../../config/config.json';\nimport genre from '../../config/genres.json';\nimport * as Details from '../../styles/routes/game/details';\nimport { buildStyles } from 'react-circular-progressbar';\nimport { useState, useEffect, useMemo } from 'react';\nimport axios, { AxiosResponse } from 'axios';\nimport * as Global from '../../styles/global';\nimport { GameExtraDetails } from '../../components/game/extra-details';\ninterface ICardProp {\n   cards: Array<ISwipe>;\n}\ninterface ParamTypes {\n   cardId: string\n}\nexport const CardDetails = (props: ICardProp) => {\n   const  { cardId } = useParams<ParamTypes>();\n   const history = useHistory();\n   \n   const curCard = useMemo<ISwipe | undefined>(() => {\n      return props.cards.find((card) => card.id === parseInt(cardId));\n   }, [cardId, props.cards]);\n\n   const type = useMemo<'movie' | 'tv' | undefined>(() => {\n      if (curCard?.original_title) {\n         return 'movie';\n      } else if (curCard?.original_name) {\n         return 'tv';\n      } else {\n         return undefined;\n      }\n   }, [curCard]);\n\n   const [genres, setGenres ] = useState<Array<string>>([]);\n\n   useEffect(() => {\n      if (curCard?.genre_ids === undefined) {\n         setGenres([]);\n      } else {\n         const genres = curCard?.genre_ids.map((id) => {\n            const genreName = genre[type || 'movie'].find((g) => g.id === id)?.name || '';\n            return genreName;\n         });\n         setGenres(genres);\n      }\n   }, [type, curCard?.genre_ids]);\n\n   const bgUrl = useMemo<string>(() => {\n      if (curCard && curCard.backdrop_path) {\n         return config.movieDb.bgUrl + curCard.backdrop_path;\n      } else {\n         history.push('/error');\n         return '';\n      }\n   }, [curCard, history]);\n\n   const posterUrl = useMemo<string>(() => {\n      if (curCard && curCard.poster_path) {\n         return config.movieDb.posterUrl + curCard.poster_path;\n      } else {\n         history.push('/error');\n         return '';\n      }\n   }, [curCard, history]);\n\n   useEffect(() => {\n      if (curCard === undefined) {\n         console.log(curCard);\n         history.push('/error');\n      }\n   }, [curCard, history]);\n\n\n   return (\n      <Details.Wrapper bgUrl={bgUrl}>\n         <Details.ContentWrapper>\n            <Details.BackButton onClick={()=> history.goBack()}>Go Back</Details.BackButton>\n            <Details.Card>\n               <Details.PosterImage posterUrl={posterUrl}/>\n               <Details.InfoWrapper>\n                  <Details.Title>{curCard?.title}</Details.Title>\n                  <Details.GenresWrapper>\n                     {genres.map((g) => <Details.GenreItem>{g}</Details.GenreItem>)}\n                  </Details.GenresWrapper>\n                  <Details.DescriptionVoteWrapper>\n                     <Details.VoteWrapper>\n                        <Details.VoteProgressBar \n                              value={(curCard?.vote_average || 0) * 10}\n                              text={curCard?.vote_average?.toString()}\n                              strokeWidth={20}\n                              styles={buildStyles({\n                                 strokeLinecap: 'butt',\n                                 pathColor: Global.color.secondary,\n                                 trailColor: Global.color.primaryDark\n                              })}\n                           />\n                        <h5>User Vote</h5>\n                     </Details.VoteWrapper>\n\n                     <Details.Description>{curCard?.overview}</Details.Description>\n\n                  </Details.DescriptionVoteWrapper>\n\n                  <GameExtraDetails cardId={cardId} type={type}/>\n               </Details.InfoWrapper>\n            </Details.Card>\n         </Details.ContentWrapper>\n\n\n           \n      </Details.Wrapper>\n\n\n         \n\n\n   );\n}","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/navbar.tsx",["119","120"],"import { useState, useEffect, useCallback } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport * as Nav from '../../styles/components/game/navbar';\nexport const GameNavbar = () => {\n   const history = useHistory();\n   const location = useLocation();\n   const [onVoteView, setOnVoteView] = useState(location.pathname.includes('vote'));\n\n   const navigateTo = useCallback((loc: string) => {\n      history.push(loc);\n      setOnVoteView(loc === 'vote');\n   }, [history]);\n\n   return (\n\n      <Nav.Wrapper onVoteView={onVoteView}>\n         <h6 onClick={() => navigateTo('vote')}>Vote</h6>\n         <h6 onClick={() => navigateTo('overview')}>Overview</h6>\n      </Nav.Wrapper>\n\n   );\n}","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/routes/invalid.ts",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/routes/game/details.ts",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/routes/game/overview.ts",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/routes/game/vote.ts",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/global.ts",["121"],"import styled, { css } from 'styled-components';\n\nexport const color = {\n   primary: '#3B406B',\n   primaryDark: '#2B2F54',\n   secondary: '#FF616F'\n}\nexport const transition = 'all .15s ease-in-out';\n\nexport const Button = styled.button`\n   transition: ${transition};\n   padding: 10px;\n   background: transparent;\n   box-shadow: none;\n   outline: none;\n   border: 1px solid white;\n   border-radius: 10px;\n   color: white;\n   font-size: 22px;\n   margin: 15px;\n   &:hover {\n      color: ${color.secondary} !important;\n      border-color: ${color.secondary} !important;\n   }\n`;\n\nexport const ButtonSecondary = styled(Button)`\n   pointer-events: none !important;\n   border: none !important;\n   background-color: ${color.secondary}};\n`;\n\n\nexport const PurpleBG = styled.div`\n\n\n   margin: 0;\n   padding: 10px;\n`;","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/card.tsx",["122"],"import { useHistory, useParams } from 'react-router-dom'\nimport { ISwipe } from '../../types/swipe';\nimport config from '../../config/config.json';\nimport * as Card from '../../styles/components/game/card';\nimport { Loading } from '../loading';\n\nimport { useCallback, useRef } from 'react';\nexport interface ICardProp {\n   card: ISwipe | undefined;\n}\ninterface GameCardParamTypes {\n   gameId: string;\n}\n\nexport const GameCard = (props: ICardProp) => {\n   const { gameId } = useParams<GameCardParamTypes>();\n   const cardRef = useRef(null);\n   const history = useHistory();\n\n\n   const goToDetails = useCallback(() => {\n      if (props.card) {\n         history.push('/game/' + gameId + '/details/' + props.card.id);\n      }\n   }, [props.card, gameId, history]);\n\n   if (props.card === undefined) {\n      return <Loading/>\n   } else {\n      return (\n         <Card.Main posterUrl={(config.movieDb.posterUrl + props.card.poster_path).toString()} key={props.card.id} onClick={goToDetails}/>\n      );\n   }\n\n}","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/routes/lobby.ts",[],["123","124"],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/home.tsx",["125","126"],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/game/game.tsx",["127","128"],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/lobby.tsx",["129"],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/components/game/card.ts",["130"],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/extra-details.tsx",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/components/game/extra-details.ts",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/app.tsx",[],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":1,"column":9,"nodeType":"137","messageId":"138","endLine":1,"endColumn":24},{"ruleId":"135","severity":1,"message":"139","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":23},{"ruleId":"131","replacedBy":"140"},{"ruleId":"133","replacedBy":"141"},{"ruleId":"135","severity":1,"message":"142","line":8,"column":8,"nodeType":"137","messageId":"138","endLine":8,"endColumn":13},{"ruleId":"135","severity":1,"message":"143","line":8,"column":17,"nodeType":"137","messageId":"138","endLine":8,"endColumn":30},{"ruleId":"135","severity":1,"message":"144","line":1,"column":20,"nodeType":"137","messageId":"138","endLine":1,"endColumn":29},{"ruleId":"135","severity":1,"message":"145","line":2,"column":10,"nodeType":"137","messageId":"138","endLine":2,"endColumn":14},{"ruleId":"135","severity":1,"message":"146","line":1,"column":18,"nodeType":"137","messageId":"138","endLine":1,"endColumn":21},{"ruleId":"135","severity":1,"message":"147","line":17,"column":10,"nodeType":"137","messageId":"138","endLine":17,"endColumn":17},{"ruleId":"131","replacedBy":"148"},{"ruleId":"133","replacedBy":"149"},{"ruleId":"135","severity":1,"message":"150","line":1,"column":31,"nodeType":"137","messageId":"138","endLine":1,"endColumn":37},{"ruleId":"135","severity":1,"message":"151","line":6,"column":13,"nodeType":"137","messageId":"138","endLine":6,"endColumn":19},{"ruleId":"135","severity":1,"message":"152","line":13,"column":13,"nodeType":"137","messageId":"138","endLine":13,"endColumn":17},{"ruleId":"135","severity":1,"message":"153","line":22,"column":11,"nodeType":"137","messageId":"138","endLine":22,"endColumn":21},{"ruleId":"135","severity":1,"message":"154","line":13,"column":10,"nodeType":"137","messageId":"138","endLine":13,"endColumn":15},{"ruleId":"135","severity":1,"message":"151","line":2,"column":13,"nodeType":"137","messageId":"138","endLine":2,"endColumn":19},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"@typescript-eslint/no-unused-vars","'CopyToClipboard' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.",["155"],["156"],"'axios' is defined but never used.","'AxiosResponse' is defined but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'css' is defined but never used.","'cardRef' is assigned a value but never used.",["155"],["156"],"'useRef' is defined but never used.","'Global' is defined but never used.","'Game' is defined but never used.","'numPlayers' is assigned a value but never used.","'color' is defined but never used.","no-global-assign","no-unsafe-negation"]