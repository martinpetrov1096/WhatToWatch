[{"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/app.tsx":"1","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/router.tsx":"2","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/index.tsx":"3","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/vote.tsx":"4","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/lobby.tsx":"5","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/overview.tsx":"6","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/home.tsx":"7","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/game.tsx":"8","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/config.ts":"9","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/details.tsx":"10","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/navbar.tsx":"11","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/card.tsx":"12","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/invalid.tsx":"13"},{"size":147,"mtime":1610170822287,"results":"14","hashOfConfig":"15"},{"size":716,"mtime":1610415986967,"results":"16","hashOfConfig":"15"},{"size":203,"mtime":1610153272451,"results":"17","hashOfConfig":"15"},{"size":614,"mtime":1610497216330,"results":"18","hashOfConfig":"15"},{"size":4953,"mtime":1610500908536,"results":"19","hashOfConfig":"15"},{"size":396,"mtime":1610498999261,"results":"20","hashOfConfig":"15"},{"size":1947,"mtime":1610247031214,"results":"21","hashOfConfig":"15"},{"size":6943,"mtime":1610503189877,"results":"22","hashOfConfig":"15"},{"size":264,"mtime":1610243036150,"results":"23","hashOfConfig":"15"},{"size":673,"mtime":1610415618088,"results":"24","hashOfConfig":"15"},{"size":204,"mtime":1610236391257,"results":"25","hashOfConfig":"15"},{"size":884,"mtime":1610441686993,"results":"26","hashOfConfig":"15"},{"size":208,"mtime":1610239334427,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16103i4",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/app.tsx",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/router.tsx",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/index.tsx",[],["56","57"],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/vote.tsx",["58","59","60"],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/lobby.tsx",["61","62","63","64"],"import { useParams, useHistory } from 'react-router-dom';\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { io, Socket } from \"socket.io-client\";\nimport axios from 'axios';\nimport { config } from '../config';\nimport { ILobby } from '../types/lobby';\ninterface LobbyParamTypes {\n   lobbyId: string;\n}\n\n\nlet socket: Socket;\nexport const LobbyRoute = function() {\n   \n   const { lobbyId } = useParams<LobbyParamTypes>();\n   const history = useHistory();\n   const [lobby, setLobby] = useState<ILobby>({\n      id: lobbyId,\n      playing: false,\n      numPlayers: 1,\n      type: 'movie',\n      genre: [],\n      minRating: 1\n   });\n\n   ///////////////////////////////////////////////////////////////////////////\n   /////////////////////////// USE EFFECT FUNCTIONS //////////////////////////\n   ///////////////////////////////////////////////////////////////////////////\n\n   /**\n    * When the component gets mounted, \n    * initiate the socketio client and \n    * define all of the socket.on \n    * event functions\n    */\n   useEffect(() => {\n      socket =io(config.server.url + '/lobby', {\n         query: {\n            'gameId': lobbyId\n         }\n      });\n      // socket.on('connection', () => {\n      //    console.log('connected');\n      // });\n      socket.on('update', (lobby: ILobby) => {\n         console.log('new value');\n         setLobby((oldLobby: ILobby) => {\n            return lobby;\n         });\n      });\n      // socket.on('conn', (newLobby: Lobby) => {\n      //    console.log('new conn')\n      //    setLobby(newLobby);\n      // });\n      socket.on('error', (err: string) => {\n         console.log(err);\n         switch(err) {\n            case 'game has already started':\n               socket.disconnect();\n         }\n      });\n      return () => {\n         console.log('lobby cleanup');\n         socket.disconnect();\n      }\n   }, []);\n\n   /**\n    * Monitor lobbyId. If it is changed, \n    * verify that it is a proper lobbyId.\n    * If it isn't, redirect to the error\n    * page\n    */\n   useEffect(() => {\n      axios.get('http://' + config.server.url + '/game', {\n         params: {\n            id: lobbyId\n         }\n      }).then((res) => {\n         if (res.data.Status !== 'Lobby') {\n            history.push('/error');\n            socket.disconnect();\n         }\n      })\n      .catch(() => {\n         history.push('/error');\n         socket.disconnect();\n      })\n   }, [lobbyId]);\n\n   /**\n    * Monitor lobby.playing. If it is\n    * set to true, disconnect the socket,\n    * and go to the game route, and emit\n    * start\n    */\n   useEffect(() => {\n      if (lobby.playing) {\n         socket.disconnect();\n         history.push('/game/' + lobbyId + '/vote');\n      }\n   }, [lobby]);\n\n\n   ///////////////////////////////////////////////////////////////////////////\n   ///////////////////////// ONCLICK HANDLER FUNCTIONS ///////////////////////\n   ///////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Function that will be bound to onClick\n    * event for the start button. If clicked, it\n    * will set the lobby playing to true, and \n    * the useEffect handler will handle the rest.\n    */\n   const startGame = useCallback(() => {\n      socket.emit('start');\n   }, []);\n\n   /**\n    * Function that will be bound to onClick\n    * event for the movie/tv radio buttons\n    */\n   const setType = useCallback((newType: 'movie' | 'tv') => {\n      socket.emit('changeType', newType);\n      setLobby({\n         ...lobby,\n         type: newType\n      });\n   }, [lobby]);\n\n\n   // /**\n   //  * The following handle the rating\n   //  */\n   // const setMinRating = useRef((rating: number) => {\n\n   //    if (rating > 0 && rating < 10) {\n   //       lobby.minRating = rating;\n   //       setLobby({\n   //          ...lobby,\n   //          minRating: rating\n   //       });\n   // //      socket.emit('change', 'tv-show');\n   //       }\n   // });\n\n   // const handleRatingChange = useRef((event: any) => {\n   //    const newRating = parseInt(event.target.value);\n   //    setMinRating.current(newRating);\n   // });\n\n\n   return (\n      <div>\n         \n         <h1>Lobby</h1>\n         <h2>LobbyId: {lobbyId}</h2>\n\n         {/* <button onClick={() => setLobby({...lobby, minRating: lobby.minRating-1})}>-</button>\n         <input type=\"text\" value={lobby.minRating.toString()} onChange={handleRatingChange.current}/>\n         <button onClick={() => setMinRating.current(lobby.minRating+1)}>+</button> */}\n\n         <form>\n            <input type=\"radio\" id=\"tvBtn\" name=\"type\" value=\"tv\" checked={lobby.type === 'tv'} onChange={()=>setType('tv')}/>\n            <label htmlFor=\"tv\">TV-Show</label>\n            <input type=\"radio\" id=\"movieBtn\" name=\"type\" value=\"movie\" checked={lobby.type === 'movie'} onChange={()=>setType('movie')}/>\n            <label htmlFor=\"movie\">Movie</label>\n         </form>\n\n         <button onClick={startGame}>Start Game</button>\n      </div>\n   )\n}","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/overview.tsx",["65"],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/home.tsx",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/game.tsx",["66","67","68","69","70"],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/config.ts",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/details.tsx",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/navbar.tsx",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/card.tsx",["71","72"],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/invalid.tsx",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":10,"nodeType":"79","messageId":"80","endLine":1,"endColumn":19},{"ruleId":"77","severity":1,"message":"81","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":14},{"ruleId":"77","severity":1,"message":"82","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":16},{"ruleId":"77","severity":1,"message":"83","line":2,"column":34,"nodeType":"79","messageId":"80","endLine":2,"endColumn":40},{"ruleId":"84","severity":1,"message":"85","line":66,"column":7,"nodeType":"86","endLine":66,"endColumn":9,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"88","line":89,"column":7,"nodeType":"86","endLine":89,"endColumn":16,"suggestions":"89"},{"ruleId":"84","severity":1,"message":"90","line":102,"column":7,"nodeType":"86","endLine":102,"endColumn":14,"suggestions":"91"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":10,"nodeType":"79","messageId":"80","endLine":1,"endColumn":19},{"ruleId":"77","severity":1,"message":"83","line":1,"column":41,"nodeType":"79","messageId":"80","endLine":1,"endColumn":47},{"ruleId":"77","severity":1,"message":"92","line":2,"column":35,"nodeType":"79","messageId":"80","endLine":2,"endColumn":43},{"ruleId":"77","severity":1,"message":"93","line":23,"column":11,"nodeType":"79","messageId":"80","endLine":23,"endColumn":21},{"ruleId":"84","severity":1,"message":"88","line":52,"column":7,"nodeType":"86","endLine":52,"endColumn":15,"suggestions":"94"},{"ruleId":"84","severity":1,"message":"95","line":140,"column":7,"nodeType":"86","endLine":140,"endColumn":9,"suggestions":"96"},{"ruleId":"77","severity":1,"message":"78","line":5,"column":10,"nodeType":"79","messageId":"80","endLine":5,"endColumn":19},{"ruleId":"97","severity":1,"message":"98","line":17,"column":19,"nodeType":"99","messageId":"100","endLine":17,"endColumn":21},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'config' is defined but never used.","'useRef' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'lobbyId'. Either include it or remove the dependency array.","ArrayExpression",["103"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["104"],"React Hook useEffect has missing dependencies: 'history' and 'lobbyId'. Either include them or remove the dependency array.",["105"],"'Redirect' is defined but never used.","'numPlayers' is assigned a value but never used.",["106"],"React Hook useEffect has a missing dependency: 'gameId'. Either include it or remove the dependency array.",["107"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [lobbyId]",{"range":"118","text":"119"},"Update the dependencies array to be: [history, lobbyId]",{"range":"120","text":"121"},"Update the dependencies array to be: [history, lobby, lobbyId]",{"range":"122","text":"123"},"Update the dependencies array to be: [gameId, history]",{"range":"124","text":"125"},"Update the dependencies array to be: [gameId]",{"range":"126","text":"127"},[1875,1877],"[lobbyId]",[2422,2431],"[history, lobbyId]",[2727,2734],"[history, lobby, lobbyId]",[1827,1835],"[gameId, history]",[4761,4763],"[gameId]"]