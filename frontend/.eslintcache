[{"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/routes/home.ts":"1","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/components/game/loading.ts":"2","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/index.tsx":"3","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/lobby/genres.tsx":"4","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/lobby/min-rating.tsx":"5","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/lobby/id.tsx":"6","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/lobby/type.tsx":"7","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/game/vote.tsx":"8","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/game/overview.tsx":"9","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/game/details.tsx":"10","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/navbar.tsx":"11","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/routes/invalid.ts":"12","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/routes/game/details.ts":"13","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/routes/game/overview.ts":"14","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/routes/game/vote.ts":"15","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/global.ts":"16","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/card.tsx":"17","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/routes/lobby.ts":"18","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/home.tsx":"19","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/game/game.tsx":"20","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/lobby.tsx":"21","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/components/game/card.ts":"22","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/extra-details.tsx":"23","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/components/game/extra-details.ts":"24","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/app.tsx":"25","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/components/game/navbar.ts":"26","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/components/lobby/type.ts":"27","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/components/lobby/genres.ts":"28","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/components/lobby/min-rating.ts":"29","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/components/lobby/id.ts":"30","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/loading.tsx":"31","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/invalid.tsx":"32","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/router.tsx":"33"},{"size":1425,"mtime":1610680663349,"results":"34","hashOfConfig":"35"},{"size":988,"mtime":1611026301196,"results":"36","hashOfConfig":"35"},{"size":228,"mtime":1611205301036,"results":"37","hashOfConfig":"35"},{"size":1042,"mtime":1611204651793,"results":"38","hashOfConfig":"35"},{"size":959,"mtime":1611204684067,"results":"39","hashOfConfig":"35"},{"size":563,"mtime":1611379571099,"results":"40","hashOfConfig":"35"},{"size":869,"mtime":1611204697954,"results":"41","hashOfConfig":"35"},{"size":2125,"mtime":1611205015767,"results":"42","hashOfConfig":"35"},{"size":1604,"mtime":1611204985871,"results":"43","hashOfConfig":"35"},{"size":3832,"mtime":1611204918429,"results":"44","hashOfConfig":"35"},{"size":647,"mtime":1611367952930,"results":"45","hashOfConfig":"35"},{"size":519,"mtime":1611125704359,"results":"46","hashOfConfig":"35"},{"size":2892,"mtime":1611205191225,"results":"47","hashOfConfig":"35"},{"size":1251,"mtime":1611107576120,"results":"48","hashOfConfig":"35"},{"size":1795,"mtime":1611205216872,"results":"49","hashOfConfig":"35"},{"size":794,"mtime":1611205243684,"results":"50","hashOfConfig":"35"},{"size":956,"mtime":1611204756935,"results":"51","hashOfConfig":"35"},{"size":571,"mtime":1611376695502,"results":"52","hashOfConfig":"35"},{"size":2626,"mtime":1611530482103,"results":"53","hashOfConfig":"35"},{"size":6650,"mtime":1611530572677,"results":"54","hashOfConfig":"35"},{"size":4661,"mtime":1611530513992,"results":"55","hashOfConfig":"35"},{"size":468,"mtime":1611205135102,"results":"56","hashOfConfig":"35"},{"size":2126,"mtime":1611530458941,"results":"57","hashOfConfig":"35"},{"size":1906,"mtime":1611125518603,"results":"58","hashOfConfig":"35"},{"size":137,"mtime":1611205294471,"results":"59","hashOfConfig":"35"},{"size":881,"mtime":1611205147007,"results":"60","hashOfConfig":"35"},{"size":273,"mtime":1611205169502,"results":"61","hashOfConfig":"35"},{"size":905,"mtime":1611030448322,"results":"62","hashOfConfig":"35"},{"size":970,"mtime":1611030809203,"results":"63","hashOfConfig":"35"},{"size":475,"mtime":1611031666553,"results":"64","hashOfConfig":"35"},{"size":268,"mtime":1611026301197,"results":"65","hashOfConfig":"35"},{"size":645,"mtime":1611022548387,"results":"66","hashOfConfig":"35"},{"size":765,"mtime":1611022666257,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16103i4",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/routes/home.ts",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/components/game/loading.ts",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/index.tsx",[],["142","143"],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/lobby/genres.tsx",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/lobby/min-rating.tsx",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/lobby/id.tsx",["144","145"],"import { useMemo } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport * as ID from '../../styles/components/lobby/id';\n\ninterface IIDProps {\n   lobbyId: string;\n}\n\nexport const LobbyID = (props: IIDProps) => {\n\n   return (\n      <ID.Wrapper>\n         <ID.Element>{props.lobbyId[0]}</ID.Element>\n         <ID.Element>{props.lobbyId[1]}</ID.Element>\n         <ID.Element>{props.lobbyId[2]}</ID.Element>\n         <ID.Element>{props.lobbyId[3]}</ID.Element>\n         <ID.Element>{props.lobbyId[4]}</ID.Element>\n      </ID.Wrapper>\n   );\n}","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/lobby/type.tsx",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/game/vote.tsx",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/game/overview.tsx",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/game/details.tsx",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/navbar.tsx",["146","147"],"import { useState, useCallback } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport * as Nav from '../../styles/components/game/navbar';\n\n\ninterface IGameNavbarProps {\n   route: 'vote' | 'overview';\n}\n\nexport const GameNavbar = (props: IGameNavbarProps) => {\n   \n   const history = useHistory();\n\n  \n\n   const navigateTo = useCallback((loc: string) => {\n      history.push(loc);\n   }, [history]);\n\n   return (\n\n      <Nav.Wrapper onVoteView={props.route==='vote'}>\n         <h6 onClick={() => navigateTo('vote')}>Vote</h6>\n         <h6 onClick={() => navigateTo('overview')}>Overview</h6>\n      </Nav.Wrapper>\n   );\n}","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/routes/invalid.ts",[],["148","149"],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/routes/game/details.ts",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/routes/game/overview.ts",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/routes/game/vote.ts",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/global.ts",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/card.tsx",[],["150","151"],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/routes/lobby.ts",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/home.tsx",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/game/game.tsx",["152"],"import React, { useCallback, useEffect, useState } from \"react\";\nimport { Switch,Route, useParams, useHistory } from \"react-router-dom\";\nimport { io, Socket } from \"socket.io-client\";\nimport { GameNavbar } from '../../components/game/navbar';\nimport { GameVote } from './vote';\nimport { GameOverview } from './overview';\nimport { CardDetails } from './details';\nimport { InvalidGame } from \"../invalid\";\nimport config from '../../config/config.json';\nimport { ISwipe } from \"../../types/swipe\";\nimport { IGame } from \"../../types/game\";\nimport axios from \"axios\";\ninterface IGameParamTypes {\n   gameId: string;\n};\nlet socket: Socket;\nexport const GameRoute = () => {\n\n   /* Get the game ID, and if invalid, redirect */\n   const { gameId } = useParams<IGameParamTypes>();\n   const [numPlayers, setNumPlayers] = useState<number>(0);\n   const [swipes, setSwipes] = useState<Array<ISwipe>>([]);\n   const [curSwipeIdx, setCurSwipeIdx] = useState<number>(0);\n   const history = useHistory();\n   ///////////////////////////////////////////////////////////////////////////\n   /////////////////////////// USE EFFECT FUNCTIONS //////////////////////////\n   ///////////////////////////////////////////////////////////////////////////\n\n   /**\n    * Monitor lobbyId. If it is changed, \n    * verify that it is a proper lobbyId.\n    * If it isn't, redirect to the error\n    * page\n    */\n   useEffect(() => {\n      axios.get(config.server.apiUrl + 'game', {\n         params: {\n            id: gameId\n         }\n      }).then((res) => {\n         if (res.data.Status !== 'Game') {\n            history.push('/error');\n            socket.disconnect();\n         }\n      })\n      .catch(() => {\n         history.push('/error');\n         socket.disconnect();\n      })\n   }, [gameId, history]);\n\n   /**\n    * When the component gets mounted, \n    * initiate the socketio client and \n    * define all of the socket.on \n    * event functions\n    */\n   useEffect(() => {\n\n      /* Init socket io client */\n      socket = io(config.server.gameSocketUrl, {\n         query: {\n            'gameId': gameId\n         }\n      });\n\n      socket.on('newSwipes', (swipes: Array<ISwipe>) => {\n         console.log('Got new swipes');\n         setSwipes((oldSwipes) => {\n            return oldSwipes.concat(...swipes);\n         });\n      });\n\n      /**\n       * If there aren't any more swipes, \n       * just disconnect\n       */\n      socket.on('noNewSwipes', () => {\n         console.log('No new swipes left');\n         \n         /**\n          * Setting curSwipeIdx to -99\n          * indicates that there are no\n          * more cards left\n          */\n         setCurSwipeIdx((oldIdx) => {\n            if (oldIdx === -1) {\n               return -99;\n            }\n            return oldIdx;\n         });\n      });\n\n      socket.on('newConn', (numPlayers: number) => {\n         console.log('A new player joined');\n         setNumPlayers(numPlayers);\n      });\n\n      socket.on('newDisconn', (numPlayers: number) => {\n         console.log('A player left');\n         setNumPlayers(numPlayers);\n      });\n\n      socket.on('connection', (game: IGame) => {\n         console.log('Connected');\n         setNumPlayers(game.numPlayers);\n\n         /**\n          * Setting curSwipeIdx to -99\n          * indicates that there are no\n          * more cards left\n          */\n         if (game.swipes.length === 0) {\n            setCurSwipeIdx(-99);\n         }\n         setSwipes(game.swipes);\n      });\n\n      socket.on('voted', ({swipeId, vote}: {swipeId: number, vote: 'yes' | 'no'}) => {\n         setSwipes((oldSwipes) => {\n            const idx = oldSwipes.findIndex((swipe) => swipe.id === swipeId);\n            if (idx === -1) {\n               return oldSwipes;\n            }\n            const newSwipes = JSON.parse(JSON.stringify(oldSwipes));\n            vote === 'yes' ? ++newSwipes[idx].numLikes : ++newSwipes[idx].numDislikes;\n            return newSwipes;\n         });\n      });\n\n      socket.on('error', (err: Error) => {\n         console.log(err);\n      });\n      \n      /**\n       * Return a function that disconnects from \n       * the socket so we can cleanup\n       */\n      return () => {\n         console.log('game cleanup');\n         socket.disconnect();\n      }\n   }, [gameId]);\n   \n   /**\n    * Monitor @swipes to watch when new\n    * cards get added. If they get added,\n    * and if @curSwipeIdx == -1, it means that\n    * we were waiting for more cards, so we \n    * need to update the current card\n    */\n   useEffect(() => {\n      if (curSwipeIdx === -1) {\n         setCurSwipeIdx(swipes.findIndex((swipe) => swipe.vote === undefined));\n      }\n   }, [swipes, curSwipeIdx]);\n   ///////////////////////////////////////////////////////////////////////////\n   ///////////////////////// ONCLICK HANDLER FUNCTIONS ///////////////////////\n   ///////////////////////////////////////////////////////////////////////////\n\n   /**\n    * A function that can be passed as a\n    * param to the vote card to vote \n    * yes or no\n    * @param vote the vote\n    */\n   const voteFunc = useCallback((vote: 'yes' | 'no') => {\n      \n      if (vote === 'yes') {\n         socket.emit('vote', { gameId: gameId, swipeId: swipes[curSwipeIdx].id, vote: 'yes' });\n         swipes[curSwipeIdx].vote = 'yes';\n      } else {\n         socket.emit('vote', { gameId: gameId, swipeId: swipes[curSwipeIdx].id, vote: 'no' });\n         swipes[curSwipeIdx].vote = 'no';\n      }\n\n      /**\n       * After voting, set the curSwipeIdx to the next\n       * one. If curSwipeIdx === -1, request for more \n       * swipes. When they are receieved a useEffect \n       * call will update curSwipeIdx. \n       */\n      const nextSwipe = swipes.findIndex((swipe) => swipe.vote === undefined);\n      if (nextSwipe === -1) {\n         socket.emit('genNewSwipes');\n         console.log('getting new swipes');\n      }\n      setCurSwipeIdx(nextSwipe);\n   }, [swipes, gameId, curSwipeIdx]);\n\n   return (\n         <Switch>\n            <Route exact path=\"/game/:gameId/vote\">\n               <GameNavbar route=\"vote\"/>\n               <GameVote vote={voteFunc} curSwipe={swipes[curSwipeIdx]} swipeIdx={curSwipeIdx}/>\n            </Route>\n            <Route exact path=\"/game/:gameId/overview/\">\n               <GameNavbar route=\"overview\"/>\n               <GameOverview swipes={swipes.filter((x) => x.vote !== undefined)} />\n            </Route>\n            <Route exact path=\"/game/:gameId/details/:cardId\">\n               <CardDetails cards={swipes}/>\n            </Route>\n            <Route path=\"/game\">\n               <InvalidGame apology=\"Sorry, this page doesn't exist :(\"/>\n            </Route>\n         </Switch>\n   );\n}","/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/lobby.tsx",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/components/game/card.ts",[],["153","154"],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/game/extra-details.tsx",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/components/game/extra-details.ts",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/app.tsx",[],["155","156"],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/components/game/navbar.ts",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/components/lobby/type.ts",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/components/lobby/genres.ts",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/components/lobby/min-rating.ts",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/styles/components/lobby/id.ts",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/components/loading.tsx",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/invalid.tsx",[],"/Users/martin/Documents/GitHub/what-to-watch/frontend/src/routes/router.tsx",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":1,"column":10,"nodeType":"163","messageId":"164","endLine":1,"endColumn":17},{"ruleId":"161","severity":1,"message":"165","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":25},{"ruleId":"161","severity":1,"message":"166","line":1,"column":10,"nodeType":"163","messageId":"164","endLine":1,"endColumn":18},{"ruleId":"161","severity":1,"message":"167","line":2,"column":22,"nodeType":"163","messageId":"164","endLine":2,"endColumn":33},{"ruleId":"157","replacedBy":"168"},{"ruleId":"159","replacedBy":"169"},{"ruleId":"157","replacedBy":"170"},{"ruleId":"159","replacedBy":"171"},{"ruleId":"161","severity":1,"message":"172","line":21,"column":11,"nodeType":"163","messageId":"164","endLine":21,"endColumn":21},{"ruleId":"157","replacedBy":"173"},{"ruleId":"159","replacedBy":"174"},{"ruleId":"157","replacedBy":"175"},{"ruleId":"159","replacedBy":"176"},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],"@typescript-eslint/no-unused-vars","'useMemo' is defined but never used.","Identifier","unusedVar","'CopyToClipboard' is defined but never used.","'useState' is defined but never used.","'useLocation' is defined but never used.",["177"],["178"],["177"],["178"],"'numPlayers' is assigned a value but never used.",["177"],["178"],["177"],["178"],"no-global-assign","no-unsafe-negation"]